// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: converse/service/main/main.proto
// Protobuf C++ Version: 5.29.3

#ifndef converse_2fservice_2fmain_2fmain_2eproto_2epb_2eh
#define converse_2fservice_2fmain_2fmain_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_converse_2fservice_2fmain_2fmain_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_converse_2fservice_2fmain_2fmain_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_converse_2fservice_2fmain_2fmain_2eproto;
namespace converse {
namespace service {
namespace main {
class Conversation;
struct ConversationDefaultTypeInternal;
extern ConversationDefaultTypeInternal _Conversation_default_instance_;
class CreateConversationRequest;
struct CreateConversationRequestDefaultTypeInternal;
extern CreateConversationRequestDefaultTypeInternal _CreateConversationRequest_default_instance_;
class CreateConversationResponse;
struct CreateConversationResponseDefaultTypeInternal;
extern CreateConversationResponseDefaultTypeInternal _CreateConversationResponse_default_instance_;
class DeleteConversationRequest;
struct DeleteConversationRequestDefaultTypeInternal;
extern DeleteConversationRequestDefaultTypeInternal _DeleteConversationRequest_default_instance_;
class DeleteConversationResponse;
struct DeleteConversationResponseDefaultTypeInternal;
extern DeleteConversationResponseDefaultTypeInternal _DeleteConversationResponse_default_instance_;
class DeleteMessageRequest;
struct DeleteMessageRequestDefaultTypeInternal;
extern DeleteMessageRequestDefaultTypeInternal _DeleteMessageRequest_default_instance_;
class DeleteMessageResponse;
struct DeleteMessageResponseDefaultTypeInternal;
extern DeleteMessageResponseDefaultTypeInternal _DeleteMessageResponse_default_instance_;
class DeleteUserRequest;
struct DeleteUserRequestDefaultTypeInternal;
extern DeleteUserRequestDefaultTypeInternal _DeleteUserRequest_default_instance_;
class DeleteUserResponse;
struct DeleteUserResponseDefaultTypeInternal;
extern DeleteUserResponseDefaultTypeInternal _DeleteUserResponse_default_instance_;
class GetConversationRequest;
struct GetConversationRequestDefaultTypeInternal;
extern GetConversationRequestDefaultTypeInternal _GetConversationRequest_default_instance_;
class GetConversationResponse;
struct GetConversationResponseDefaultTypeInternal;
extern GetConversationResponseDefaultTypeInternal _GetConversationResponse_default_instance_;
class GetConversationsRequest;
struct GetConversationsRequestDefaultTypeInternal;
extern GetConversationsRequestDefaultTypeInternal _GetConversationsRequest_default_instance_;
class GetConversationsResponse;
struct GetConversationsResponseDefaultTypeInternal;
extern GetConversationsResponseDefaultTypeInternal _GetConversationsResponse_default_instance_;
class GetMessagesRequest;
struct GetMessagesRequestDefaultTypeInternal;
extern GetMessagesRequestDefaultTypeInternal _GetMessagesRequest_default_instance_;
class GetMessagesResponse;
struct GetMessagesResponseDefaultTypeInternal;
extern GetMessagesResponseDefaultTypeInternal _GetMessagesResponse_default_instance_;
class GetOtherUsersRequest;
struct GetOtherUsersRequestDefaultTypeInternal;
extern GetOtherUsersRequestDefaultTypeInternal _GetOtherUsersRequest_default_instance_;
class GetOtherUsersResponse;
struct GetOtherUsersResponseDefaultTypeInternal;
extern GetOtherUsersResponseDefaultTypeInternal _GetOtherUsersResponse_default_instance_;
class Message;
struct MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class ReadConversationRequest;
struct ReadConversationRequestDefaultTypeInternal;
extern ReadConversationRequestDefaultTypeInternal _ReadConversationRequest_default_instance_;
class ReadConversationResponse;
struct ReadConversationResponseDefaultTypeInternal;
extern ReadConversationResponseDefaultTypeInternal _ReadConversationResponse_default_instance_;
class ReadMessagesRequest;
struct ReadMessagesRequestDefaultTypeInternal;
extern ReadMessagesRequestDefaultTypeInternal _ReadMessagesRequest_default_instance_;
class ReadMessagesResponse;
struct ReadMessagesResponseDefaultTypeInternal;
extern ReadMessagesResponseDefaultTypeInternal _ReadMessagesResponse_default_instance_;
class ReceiveMessageRequest;
struct ReceiveMessageRequestDefaultTypeInternal;
extern ReceiveMessageRequestDefaultTypeInternal _ReceiveMessageRequest_default_instance_;
class ReceiveMessageResponse;
struct ReceiveMessageResponseDefaultTypeInternal;
extern ReceiveMessageResponseDefaultTypeInternal _ReceiveMessageResponse_default_instance_;
class ReceiveReadMessagesRequest;
struct ReceiveReadMessagesRequestDefaultTypeInternal;
extern ReceiveReadMessagesRequestDefaultTypeInternal _ReceiveReadMessagesRequest_default_instance_;
class ReceiveReadMessagesResponse;
struct ReceiveReadMessagesResponseDefaultTypeInternal;
extern ReceiveReadMessagesResponseDefaultTypeInternal _ReceiveReadMessagesResponse_default_instance_;
class SendMessageRequest;
struct SendMessageRequestDefaultTypeInternal;
extern SendMessageRequestDefaultTypeInternal _SendMessageRequest_default_instance_;
class SendMessageResponse;
struct SendMessageResponseDefaultTypeInternal;
extern SendMessageResponseDefaultTypeInternal _SendMessageResponse_default_instance_;
class SigninUserRequest;
struct SigninUserRequestDefaultTypeInternal;
extern SigninUserRequestDefaultTypeInternal _SigninUserRequest_default_instance_;
class SigninUserResponse;
struct SigninUserResponseDefaultTypeInternal;
extern SigninUserResponseDefaultTypeInternal _SigninUserResponse_default_instance_;
class SignoutUserRequest;
struct SignoutUserRequestDefaultTypeInternal;
extern SignoutUserRequestDefaultTypeInternal _SignoutUserRequest_default_instance_;
class SignoutUserResponse;
struct SignoutUserResponseDefaultTypeInternal;
extern SignoutUserResponseDefaultTypeInternal _SignoutUserResponse_default_instance_;
class SignupUserRequest;
struct SignupUserRequestDefaultTypeInternal;
extern SignupUserRequestDefaultTypeInternal _SignupUserRequest_default_instance_;
class SignupUserResponse;
struct SignupUserResponseDefaultTypeInternal;
extern SignupUserResponseDefaultTypeInternal _SignupUserResponse_default_instance_;
class User;
struct UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
}  // namespace main
}  // namespace service
}  // namespace converse
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace converse {
namespace service {
namespace main {

// ===================================================================


// -------------------------------------------------------------------

class User final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.User) */ {
 public:
  inline User() : User(nullptr) {}
  ~User() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(User* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(User));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR User(
      ::google::protobuf::internal::ConstantInitialized);

  inline User(const User& from) : User(nullptr, from) {}
  inline User(User&& from) noexcept
      : User(nullptr, std::move(from)) {}
  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }
  inline User& operator=(User&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const User& default_instance() {
    return *internal_default_instance();
  }
  static inline const User* internal_default_instance() {
    return reinterpret_cast<const User*>(
        &_User_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(User& a, User& b) { a.Swap(&b); }
  inline void Swap(User* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(User* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  User* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<User>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const User& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const User& from) { User::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(User* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.User"; }

 protected:
  explicit User(::google::protobuf::Arena* arena);
  User(::google::protobuf::Arena* arena, const User& from);
  User(::google::protobuf::Arena* arena, User&& from) noexcept
      : User(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsernameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string username = 2 [json_name = "username"];
  void clear_username() ;
  const std::string& username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* value);

  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(
      const std::string& value);
  std::string* _internal_mutable_username();

  public:
  // uint64 id = 1 [json_name = "id"];
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.User)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const User& from_msg);
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::uint64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class SignupUserResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.SignupUserResponse) */ {
 public:
  inline SignupUserResponse() : SignupUserResponse(nullptr) {}
  ~SignupUserResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SignupUserResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SignupUserResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignupUserResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignupUserResponse(const SignupUserResponse& from) : SignupUserResponse(nullptr, from) {}
  inline SignupUserResponse(SignupUserResponse&& from) noexcept
      : SignupUserResponse(nullptr, std::move(from)) {}
  inline SignupUserResponse& operator=(const SignupUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignupUserResponse& operator=(SignupUserResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignupUserResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignupUserResponse* internal_default_instance() {
    return reinterpret_cast<const SignupUserResponse*>(
        &_SignupUserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SignupUserResponse& a, SignupUserResponse& b) { a.Swap(&b); }
  inline void Swap(SignupUserResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignupUserResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignupUserResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SignupUserResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignupUserResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignupUserResponse& from) { SignupUserResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SignupUserResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.SignupUserResponse"; }

 protected:
  explicit SignupUserResponse(::google::protobuf::Arena* arena);
  SignupUserResponse(::google::protobuf::Arena* arena, const SignupUserResponse& from);
  SignupUserResponse(::google::protobuf::Arena* arena, SignupUserResponse&& from) noexcept
      : SignupUserResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
  };
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.SignupUserResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignupUserResponse& from_msg);
    ::uint64_t user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class SignupUserRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.SignupUserRequest) */ {
 public:
  inline SignupUserRequest() : SignupUserRequest(nullptr) {}
  ~SignupUserRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SignupUserRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SignupUserRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignupUserRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignupUserRequest(const SignupUserRequest& from) : SignupUserRequest(nullptr, from) {}
  inline SignupUserRequest(SignupUserRequest&& from) noexcept
      : SignupUserRequest(nullptr, std::move(from)) {}
  inline SignupUserRequest& operator=(const SignupUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignupUserRequest& operator=(SignupUserRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignupUserRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignupUserRequest* internal_default_instance() {
    return reinterpret_cast<const SignupUserRequest*>(
        &_SignupUserRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SignupUserRequest& a, SignupUserRequest& b) { a.Swap(&b); }
  inline void Swap(SignupUserRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignupUserRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignupUserRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SignupUserRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignupUserRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignupUserRequest& from) { SignupUserRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SignupUserRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.SignupUserRequest"; }

 protected:
  explicit SignupUserRequest(::google::protobuf::Arena* arena);
  SignupUserRequest(::google::protobuf::Arena* arena, const SignupUserRequest& from);
  SignupUserRequest(::google::protobuf::Arena* arena, SignupUserRequest&& from) noexcept
      : SignupUserRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserUsernameFieldNumber = 1,
    kUserPasswordFieldNumber = 2,
  };
  // string user_username = 1 [json_name = "userUsername"];
  void clear_user_username() ;
  const std::string& user_username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_username(Arg_&& arg, Args_... args);
  std::string* mutable_user_username();
  PROTOBUF_NODISCARD std::string* release_user_username();
  void set_allocated_user_username(std::string* value);

  private:
  const std::string& _internal_user_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_username(
      const std::string& value);
  std::string* _internal_mutable_user_username();

  public:
  // string user_password = 2 [json_name = "userPassword"];
  void clear_user_password() ;
  const std::string& user_password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_password(Arg_&& arg, Args_... args);
  std::string* mutable_user_password();
  PROTOBUF_NODISCARD std::string* release_user_password();
  void set_allocated_user_password(std::string* value);

  private:
  const std::string& _internal_user_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_password(
      const std::string& value);
  std::string* _internal_mutable_user_password();

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.SignupUserRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignupUserRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr user_username_;
    ::google::protobuf::internal::ArenaStringPtr user_password_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class SignoutUserResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:converse.service.main.SignoutUserResponse) */ {
 public:
  inline SignoutUserResponse() : SignoutUserResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SignoutUserResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SignoutUserResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignoutUserResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignoutUserResponse(const SignoutUserResponse& from) : SignoutUserResponse(nullptr, from) {}
  inline SignoutUserResponse(SignoutUserResponse&& from) noexcept
      : SignoutUserResponse(nullptr, std::move(from)) {}
  inline SignoutUserResponse& operator=(const SignoutUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignoutUserResponse& operator=(SignoutUserResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignoutUserResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignoutUserResponse* internal_default_instance() {
    return reinterpret_cast<const SignoutUserResponse*>(
        &_SignoutUserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SignoutUserResponse& a, SignoutUserResponse& b) { a.Swap(&b); }
  inline void Swap(SignoutUserResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignoutUserResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignoutUserResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SignoutUserResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SignoutUserResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SignoutUserResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.SignoutUserResponse"; }

 protected:
  explicit SignoutUserResponse(::google::protobuf::Arena* arena);
  SignoutUserResponse(::google::protobuf::Arena* arena, const SignoutUserResponse& from);
  SignoutUserResponse(::google::protobuf::Arena* arena, SignoutUserResponse&& from) noexcept
      : SignoutUserResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:converse.service.main.SignoutUserResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignoutUserResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class SignoutUserRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.SignoutUserRequest) */ {
 public:
  inline SignoutUserRequest() : SignoutUserRequest(nullptr) {}
  ~SignoutUserRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SignoutUserRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SignoutUserRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignoutUserRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignoutUserRequest(const SignoutUserRequest& from) : SignoutUserRequest(nullptr, from) {}
  inline SignoutUserRequest(SignoutUserRequest&& from) noexcept
      : SignoutUserRequest(nullptr, std::move(from)) {}
  inline SignoutUserRequest& operator=(const SignoutUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignoutUserRequest& operator=(SignoutUserRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignoutUserRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignoutUserRequest* internal_default_instance() {
    return reinterpret_cast<const SignoutUserRequest*>(
        &_SignoutUserRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SignoutUserRequest& a, SignoutUserRequest& b) { a.Swap(&b); }
  inline void Swap(SignoutUserRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignoutUserRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignoutUserRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SignoutUserRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignoutUserRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignoutUserRequest& from) { SignoutUserRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SignoutUserRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.SignoutUserRequest"; }

 protected:
  explicit SignoutUserRequest(::google::protobuf::Arena* arena);
  SignoutUserRequest(::google::protobuf::Arena* arena, const SignoutUserRequest& from);
  SignoutUserRequest(::google::protobuf::Arena* arena, SignoutUserRequest&& from) noexcept
      : SignoutUserRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
  };
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.SignoutUserRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignoutUserRequest& from_msg);
    ::uint64_t user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class SigninUserResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.SigninUserResponse) */ {
 public:
  inline SigninUserResponse() : SigninUserResponse(nullptr) {}
  ~SigninUserResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SigninUserResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SigninUserResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SigninUserResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SigninUserResponse(const SigninUserResponse& from) : SigninUserResponse(nullptr, from) {}
  inline SigninUserResponse(SigninUserResponse&& from) noexcept
      : SigninUserResponse(nullptr, std::move(from)) {}
  inline SigninUserResponse& operator=(const SigninUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SigninUserResponse& operator=(SigninUserResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SigninUserResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SigninUserResponse* internal_default_instance() {
    return reinterpret_cast<const SigninUserResponse*>(
        &_SigninUserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SigninUserResponse& a, SigninUserResponse& b) { a.Swap(&b); }
  inline void Swap(SigninUserResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SigninUserResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SigninUserResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SigninUserResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SigninUserResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SigninUserResponse& from) { SigninUserResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SigninUserResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.SigninUserResponse"; }

 protected:
  explicit SigninUserResponse(::google::protobuf::Arena* arena);
  SigninUserResponse(::google::protobuf::Arena* arena, const SigninUserResponse& from);
  SigninUserResponse(::google::protobuf::Arena* arena, SigninUserResponse&& from) noexcept
      : SigninUserResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
  };
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.SigninUserResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SigninUserResponse& from_msg);
    ::uint64_t user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class SigninUserRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.SigninUserRequest) */ {
 public:
  inline SigninUserRequest() : SigninUserRequest(nullptr) {}
  ~SigninUserRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SigninUserRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SigninUserRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SigninUserRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SigninUserRequest(const SigninUserRequest& from) : SigninUserRequest(nullptr, from) {}
  inline SigninUserRequest(SigninUserRequest&& from) noexcept
      : SigninUserRequest(nullptr, std::move(from)) {}
  inline SigninUserRequest& operator=(const SigninUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SigninUserRequest& operator=(SigninUserRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SigninUserRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SigninUserRequest* internal_default_instance() {
    return reinterpret_cast<const SigninUserRequest*>(
        &_SigninUserRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SigninUserRequest& a, SigninUserRequest& b) { a.Swap(&b); }
  inline void Swap(SigninUserRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SigninUserRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SigninUserRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SigninUserRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SigninUserRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SigninUserRequest& from) { SigninUserRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SigninUserRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.SigninUserRequest"; }

 protected:
  explicit SigninUserRequest(::google::protobuf::Arena* arena);
  SigninUserRequest(::google::protobuf::Arena* arena, const SigninUserRequest& from);
  SigninUserRequest(::google::protobuf::Arena* arena, SigninUserRequest&& from) noexcept
      : SigninUserRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserUsernameFieldNumber = 1,
    kUserPasswordFieldNumber = 2,
  };
  // string user_username = 1 [json_name = "userUsername"];
  void clear_user_username() ;
  const std::string& user_username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_username(Arg_&& arg, Args_... args);
  std::string* mutable_user_username();
  PROTOBUF_NODISCARD std::string* release_user_username();
  void set_allocated_user_username(std::string* value);

  private:
  const std::string& _internal_user_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_username(
      const std::string& value);
  std::string* _internal_mutable_user_username();

  public:
  // string user_password = 2 [json_name = "userPassword"];
  void clear_user_password() ;
  const std::string& user_password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_password(Arg_&& arg, Args_... args);
  std::string* mutable_user_password();
  PROTOBUF_NODISCARD std::string* release_user_password();
  void set_allocated_user_password(std::string* value);

  private:
  const std::string& _internal_user_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_password(
      const std::string& value);
  std::string* _internal_mutable_user_password();

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.SigninUserRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SigninUserRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr user_username_;
    ::google::protobuf::internal::ArenaStringPtr user_password_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class SendMessageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.SendMessageResponse) */ {
 public:
  inline SendMessageResponse() : SendMessageResponse(nullptr) {}
  ~SendMessageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SendMessageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SendMessageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendMessageResponse(const SendMessageResponse& from) : SendMessageResponse(nullptr, from) {}
  inline SendMessageResponse(SendMessageResponse&& from) noexcept
      : SendMessageResponse(nullptr, std::move(from)) {}
  inline SendMessageResponse& operator=(const SendMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMessageResponse& operator=(SendMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendMessageResponse* internal_default_instance() {
    return reinterpret_cast<const SendMessageResponse*>(
        &_SendMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SendMessageResponse& a, SendMessageResponse& b) { a.Swap(&b); }
  inline void Swap(SendMessageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SendMessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendMessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendMessageResponse& from) { SendMessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SendMessageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.SendMessageResponse"; }

 protected:
  explicit SendMessageResponse(::google::protobuf::Arena* arena);
  SendMessageResponse(::google::protobuf::Arena* arena, const SendMessageResponse& from);
  SendMessageResponse(::google::protobuf::Arena* arena, SendMessageResponse&& from) noexcept
      : SendMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageIdFieldNumber = 1,
  };
  // uint64 message_id = 1 [json_name = "messageId"];
  void clear_message_id() ;
  ::uint64_t message_id() const;
  void set_message_id(::uint64_t value);

  private:
  ::uint64_t _internal_message_id() const;
  void _internal_set_message_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.SendMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendMessageResponse& from_msg);
    ::uint64_t message_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class SendMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.SendMessageRequest) */ {
 public:
  inline SendMessageRequest() : SendMessageRequest(nullptr) {}
  ~SendMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SendMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SendMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendMessageRequest(const SendMessageRequest& from) : SendMessageRequest(nullptr, from) {}
  inline SendMessageRequest(SendMessageRequest&& from) noexcept
      : SendMessageRequest(nullptr, std::move(from)) {}
  inline SendMessageRequest& operator=(const SendMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMessageRequest& operator=(SendMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendMessageRequest* internal_default_instance() {
    return reinterpret_cast<const SendMessageRequest*>(
        &_SendMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SendMessageRequest& a, SendMessageRequest& b) { a.Swap(&b); }
  inline void Swap(SendMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SendMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendMessageRequest& from) { SendMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SendMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.SendMessageRequest"; }

 protected:
  explicit SendMessageRequest(::google::protobuf::Arena* arena);
  SendMessageRequest(::google::protobuf::Arena* arena, const SendMessageRequest& from);
  SendMessageRequest(::google::protobuf::Arena* arena, SendMessageRequest&& from) noexcept
      : SendMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageContentFieldNumber = 3,
    kConversationIdFieldNumber = 1,
    kMessageSendUserIdFieldNumber = 2,
  };
  // string message_content = 3 [json_name = "messageContent"];
  void clear_message_content() ;
  const std::string& message_content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message_content(Arg_&& arg, Args_... args);
  std::string* mutable_message_content();
  PROTOBUF_NODISCARD std::string* release_message_content();
  void set_allocated_message_content(std::string* value);

  private:
  const std::string& _internal_message_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_content(
      const std::string& value);
  std::string* _internal_mutable_message_content();

  public:
  // uint64 conversation_id = 1 [json_name = "conversationId"];
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // uint64 message_send_user_id = 2 [json_name = "messageSendUserId"];
  void clear_message_send_user_id() ;
  ::uint64_t message_send_user_id() const;
  void set_message_send_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_message_send_user_id() const;
  void _internal_set_message_send_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.SendMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendMessageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_content_;
    ::uint64_t conversation_id_;
    ::uint64_t message_send_user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class ReceiveReadMessagesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.ReceiveReadMessagesResponse) */ {
 public:
  inline ReceiveReadMessagesResponse() : ReceiveReadMessagesResponse(nullptr) {}
  ~ReceiveReadMessagesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReceiveReadMessagesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReceiveReadMessagesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReceiveReadMessagesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReceiveReadMessagesResponse(const ReceiveReadMessagesResponse& from) : ReceiveReadMessagesResponse(nullptr, from) {}
  inline ReceiveReadMessagesResponse(ReceiveReadMessagesResponse&& from) noexcept
      : ReceiveReadMessagesResponse(nullptr, std::move(from)) {}
  inline ReceiveReadMessagesResponse& operator=(const ReceiveReadMessagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReceiveReadMessagesResponse& operator=(ReceiveReadMessagesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReceiveReadMessagesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReceiveReadMessagesResponse* internal_default_instance() {
    return reinterpret_cast<const ReceiveReadMessagesResponse*>(
        &_ReceiveReadMessagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(ReceiveReadMessagesResponse& a, ReceiveReadMessagesResponse& b) { a.Swap(&b); }
  inline void Swap(ReceiveReadMessagesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReceiveReadMessagesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReceiveReadMessagesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReceiveReadMessagesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReceiveReadMessagesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReceiveReadMessagesResponse& from) { ReceiveReadMessagesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReceiveReadMessagesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.ReceiveReadMessagesResponse"; }

 protected:
  explicit ReceiveReadMessagesResponse(::google::protobuf::Arena* arena);
  ReceiveReadMessagesResponse(::google::protobuf::Arena* arena, const ReceiveReadMessagesResponse& from);
  ReceiveReadMessagesResponse(::google::protobuf::Arena* arena, ReceiveReadMessagesResponse&& from) noexcept
      : ReceiveReadMessagesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageIdsFieldNumber = 2,
    kConversationIdFieldNumber = 1,
  };
  // repeated uint64 message_ids = 2 [json_name = "messageIds"];
  int message_ids_size() const;
  private:
  int _internal_message_ids_size() const;

  public:
  void clear_message_ids() ;
  ::uint64_t message_ids(int index) const;
  void set_message_ids(int index, ::uint64_t value);
  void add_message_ids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& message_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_message_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_message_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_message_ids();

  public:
  // uint64 conversation_id = 1 [json_name = "conversationId"];
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.ReceiveReadMessagesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReceiveReadMessagesResponse& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> message_ids_;
    ::google::protobuf::internal::CachedSize _message_ids_cached_byte_size_;
    ::uint64_t conversation_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class ReceiveReadMessagesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.ReceiveReadMessagesRequest) */ {
 public:
  inline ReceiveReadMessagesRequest() : ReceiveReadMessagesRequest(nullptr) {}
  ~ReceiveReadMessagesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReceiveReadMessagesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReceiveReadMessagesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReceiveReadMessagesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReceiveReadMessagesRequest(const ReceiveReadMessagesRequest& from) : ReceiveReadMessagesRequest(nullptr, from) {}
  inline ReceiveReadMessagesRequest(ReceiveReadMessagesRequest&& from) noexcept
      : ReceiveReadMessagesRequest(nullptr, std::move(from)) {}
  inline ReceiveReadMessagesRequest& operator=(const ReceiveReadMessagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReceiveReadMessagesRequest& operator=(ReceiveReadMessagesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReceiveReadMessagesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReceiveReadMessagesRequest* internal_default_instance() {
    return reinterpret_cast<const ReceiveReadMessagesRequest*>(
        &_ReceiveReadMessagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(ReceiveReadMessagesRequest& a, ReceiveReadMessagesRequest& b) { a.Swap(&b); }
  inline void Swap(ReceiveReadMessagesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReceiveReadMessagesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReceiveReadMessagesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReceiveReadMessagesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReceiveReadMessagesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReceiveReadMessagesRequest& from) { ReceiveReadMessagesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReceiveReadMessagesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.ReceiveReadMessagesRequest"; }

 protected:
  explicit ReceiveReadMessagesRequest(::google::protobuf::Arena* arena);
  ReceiveReadMessagesRequest(::google::protobuf::Arena* arena, const ReceiveReadMessagesRequest& from);
  ReceiveReadMessagesRequest(::google::protobuf::Arena* arena, ReceiveReadMessagesRequest&& from) noexcept
      : ReceiveReadMessagesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
  };
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.ReceiveReadMessagesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReceiveReadMessagesRequest& from_msg);
    ::uint64_t user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class ReceiveMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.ReceiveMessageRequest) */ {
 public:
  inline ReceiveMessageRequest() : ReceiveMessageRequest(nullptr) {}
  ~ReceiveMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReceiveMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReceiveMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReceiveMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReceiveMessageRequest(const ReceiveMessageRequest& from) : ReceiveMessageRequest(nullptr, from) {}
  inline ReceiveMessageRequest(ReceiveMessageRequest&& from) noexcept
      : ReceiveMessageRequest(nullptr, std::move(from)) {}
  inline ReceiveMessageRequest& operator=(const ReceiveMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReceiveMessageRequest& operator=(ReceiveMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReceiveMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReceiveMessageRequest* internal_default_instance() {
    return reinterpret_cast<const ReceiveMessageRequest*>(
        &_ReceiveMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(ReceiveMessageRequest& a, ReceiveMessageRequest& b) { a.Swap(&b); }
  inline void Swap(ReceiveMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReceiveMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReceiveMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReceiveMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReceiveMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReceiveMessageRequest& from) { ReceiveMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReceiveMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.ReceiveMessageRequest"; }

 protected:
  explicit ReceiveMessageRequest(::google::protobuf::Arena* arena);
  ReceiveMessageRequest(::google::protobuf::Arena* arena, const ReceiveMessageRequest& from);
  ReceiveMessageRequest(::google::protobuf::Arena* arena, ReceiveMessageRequest&& from) noexcept
      : ReceiveMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
  };
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.ReceiveMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReceiveMessageRequest& from_msg);
    ::uint64_t user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class ReadMessagesResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:converse.service.main.ReadMessagesResponse) */ {
 public:
  inline ReadMessagesResponse() : ReadMessagesResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReadMessagesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReadMessagesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReadMessagesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReadMessagesResponse(const ReadMessagesResponse& from) : ReadMessagesResponse(nullptr, from) {}
  inline ReadMessagesResponse(ReadMessagesResponse&& from) noexcept
      : ReadMessagesResponse(nullptr, std::move(from)) {}
  inline ReadMessagesResponse& operator=(const ReadMessagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadMessagesResponse& operator=(ReadMessagesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadMessagesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadMessagesResponse* internal_default_instance() {
    return reinterpret_cast<const ReadMessagesResponse*>(
        &_ReadMessagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(ReadMessagesResponse& a, ReadMessagesResponse& b) { a.Swap(&b); }
  inline void Swap(ReadMessagesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadMessagesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadMessagesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ReadMessagesResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReadMessagesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReadMessagesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.ReadMessagesResponse"; }

 protected:
  explicit ReadMessagesResponse(::google::protobuf::Arena* arena);
  ReadMessagesResponse(::google::protobuf::Arena* arena, const ReadMessagesResponse& from);
  ReadMessagesResponse(::google::protobuf::Arena* arena, ReadMessagesResponse&& from) noexcept
      : ReadMessagesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:converse.service.main.ReadMessagesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReadMessagesResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class ReadMessagesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.ReadMessagesRequest) */ {
 public:
  inline ReadMessagesRequest() : ReadMessagesRequest(nullptr) {}
  ~ReadMessagesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReadMessagesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReadMessagesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReadMessagesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReadMessagesRequest(const ReadMessagesRequest& from) : ReadMessagesRequest(nullptr, from) {}
  inline ReadMessagesRequest(ReadMessagesRequest&& from) noexcept
      : ReadMessagesRequest(nullptr, std::move(from)) {}
  inline ReadMessagesRequest& operator=(const ReadMessagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadMessagesRequest& operator=(ReadMessagesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadMessagesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadMessagesRequest* internal_default_instance() {
    return reinterpret_cast<const ReadMessagesRequest*>(
        &_ReadMessagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(ReadMessagesRequest& a, ReadMessagesRequest& b) { a.Swap(&b); }
  inline void Swap(ReadMessagesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadMessagesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadMessagesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReadMessagesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadMessagesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReadMessagesRequest& from) { ReadMessagesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReadMessagesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.ReadMessagesRequest"; }

 protected:
  explicit ReadMessagesRequest(::google::protobuf::Arena* arena);
  ReadMessagesRequest(::google::protobuf::Arena* arena, const ReadMessagesRequest& from);
  ReadMessagesRequest(::google::protobuf::Arena* arena, ReadMessagesRequest&& from) noexcept
      : ReadMessagesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageIdsFieldNumber = 3,
    kUserIdFieldNumber = 1,
    kConversationIdFieldNumber = 2,
  };
  // repeated uint64 message_ids = 3 [json_name = "messageIds"];
  int message_ids_size() const;
  private:
  int _internal_message_ids_size() const;

  public:
  void clear_message_ids() ;
  ::uint64_t message_ids(int index) const;
  void set_message_ids(int index, ::uint64_t value);
  void add_message_ids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& message_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_message_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_message_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_message_ids();

  public:
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // uint64 conversation_id = 2 [json_name = "conversationId"];
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.ReadMessagesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReadMessagesRequest& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> message_ids_;
    ::google::protobuf::internal::CachedSize _message_ids_cached_byte_size_;
    ::uint64_t user_id_;
    ::uint64_t conversation_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class ReadConversationResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:converse.service.main.ReadConversationResponse) */ {
 public:
  inline ReadConversationResponse() : ReadConversationResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReadConversationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReadConversationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReadConversationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReadConversationResponse(const ReadConversationResponse& from) : ReadConversationResponse(nullptr, from) {}
  inline ReadConversationResponse(ReadConversationResponse&& from) noexcept
      : ReadConversationResponse(nullptr, std::move(from)) {}
  inline ReadConversationResponse& operator=(const ReadConversationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadConversationResponse& operator=(ReadConversationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadConversationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadConversationResponse* internal_default_instance() {
    return reinterpret_cast<const ReadConversationResponse*>(
        &_ReadConversationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ReadConversationResponse& a, ReadConversationResponse& b) { a.Swap(&b); }
  inline void Swap(ReadConversationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadConversationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadConversationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ReadConversationResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReadConversationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReadConversationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.ReadConversationResponse"; }

 protected:
  explicit ReadConversationResponse(::google::protobuf::Arena* arena);
  ReadConversationResponse(::google::protobuf::Arena* arena, const ReadConversationResponse& from);
  ReadConversationResponse(::google::protobuf::Arena* arena, ReadConversationResponse&& from) noexcept
      : ReadConversationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:converse.service.main.ReadConversationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReadConversationResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class ReadConversationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.ReadConversationRequest) */ {
 public:
  inline ReadConversationRequest() : ReadConversationRequest(nullptr) {}
  ~ReadConversationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReadConversationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReadConversationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReadConversationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReadConversationRequest(const ReadConversationRequest& from) : ReadConversationRequest(nullptr, from) {}
  inline ReadConversationRequest(ReadConversationRequest&& from) noexcept
      : ReadConversationRequest(nullptr, std::move(from)) {}
  inline ReadConversationRequest& operator=(const ReadConversationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadConversationRequest& operator=(ReadConversationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadConversationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadConversationRequest* internal_default_instance() {
    return reinterpret_cast<const ReadConversationRequest*>(
        &_ReadConversationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(ReadConversationRequest& a, ReadConversationRequest& b) { a.Swap(&b); }
  inline void Swap(ReadConversationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadConversationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadConversationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReadConversationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadConversationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReadConversationRequest& from) { ReadConversationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReadConversationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.ReadConversationRequest"; }

 protected:
  explicit ReadConversationRequest(::google::protobuf::Arena* arena);
  ReadConversationRequest(::google::protobuf::Arena* arena, const ReadConversationRequest& from);
  ReadConversationRequest(::google::protobuf::Arena* arena, ReadConversationRequest&& from) noexcept
      : ReadConversationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConversationIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
  };
  // uint64 conversation_id = 1 [json_name = "conversationId"];
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // uint64 user_id = 2 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.ReadConversationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReadConversationRequest& from_msg);
    ::uint64_t conversation_id_;
    ::uint64_t user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class Message final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.Message) */ {
 public:
  inline Message() : Message(nullptr) {}
  ~Message() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Message* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Message));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message(const Message& from) : Message(nullptr, from) {}
  inline Message(Message&& from) noexcept
      : Message(nullptr, std::move(from)) {}
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message& operator=(Message&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
        &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Message& a, Message& b) { a.Swap(&b); }
  inline void Swap(Message* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Message>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message& from) { Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Message* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.Message"; }

 protected:
  explicit Message(::google::protobuf::Arena* arena);
  Message(::google::protobuf::Arena* arena, const Message& from);
  Message(::google::protobuf::Arena* arena, Message&& from) noexcept
      : Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentFieldNumber = 3,
    kIdFieldNumber = 1,
    kSendUserIdFieldNumber = 2,
  };
  // string content = 3 [json_name = "content"];
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // uint64 id = 1 [json_name = "id"];
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // uint64 send_user_id = 2 [json_name = "sendUserId"];
  void clear_send_user_id() ;
  ::uint64_t send_user_id() const;
  void set_send_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_send_user_id() const;
  void _internal_set_send_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.Message)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Message& from_msg);
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::uint64_t id_;
    ::uint64_t send_user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class GetOtherUsersRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.GetOtherUsersRequest) */ {
 public:
  inline GetOtherUsersRequest() : GetOtherUsersRequest(nullptr) {}
  ~GetOtherUsersRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOtherUsersRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOtherUsersRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOtherUsersRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOtherUsersRequest(const GetOtherUsersRequest& from) : GetOtherUsersRequest(nullptr, from) {}
  inline GetOtherUsersRequest(GetOtherUsersRequest&& from) noexcept
      : GetOtherUsersRequest(nullptr, std::move(from)) {}
  inline GetOtherUsersRequest& operator=(const GetOtherUsersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOtherUsersRequest& operator=(GetOtherUsersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOtherUsersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOtherUsersRequest* internal_default_instance() {
    return reinterpret_cast<const GetOtherUsersRequest*>(
        &_GetOtherUsersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(GetOtherUsersRequest& a, GetOtherUsersRequest& b) { a.Swap(&b); }
  inline void Swap(GetOtherUsersRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOtherUsersRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOtherUsersRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOtherUsersRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOtherUsersRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOtherUsersRequest& from) { GetOtherUsersRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOtherUsersRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.GetOtherUsersRequest"; }

 protected:
  explicit GetOtherUsersRequest(::google::protobuf::Arena* arena);
  GetOtherUsersRequest(::google::protobuf::Arena* arena, const GetOtherUsersRequest& from);
  GetOtherUsersRequest(::google::protobuf::Arena* arena, GetOtherUsersRequest&& from) noexcept
      : GetOtherUsersRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQueryFieldNumber = 2,
    kUserIdFieldNumber = 1,
    kLimitFieldNumber = 3,
    kOffsetFieldNumber = 4,
  };
  // string query = 2 [json_name = "query"];
  void clear_query() ;
  const std::string& query() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_query(Arg_&& arg, Args_... args);
  std::string* mutable_query();
  PROTOBUF_NODISCARD std::string* release_query();
  void set_allocated_query(std::string* value);

  private:
  const std::string& _internal_query() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_query(
      const std::string& value);
  std::string* _internal_mutable_query();

  public:
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // uint64 limit = 3 [json_name = "limit"];
  void clear_limit() ;
  ::uint64_t limit() const;
  void set_limit(::uint64_t value);

  private:
  ::uint64_t _internal_limit() const;
  void _internal_set_limit(::uint64_t value);

  public:
  // uint64 offset = 4 [json_name = "offset"];
  void clear_offset() ;
  ::uint64_t offset() const;
  void set_offset(::uint64_t value);

  private:
  ::uint64_t _internal_offset() const;
  void _internal_set_offset(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.GetOtherUsersRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOtherUsersRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr query_;
    ::uint64_t user_id_;
    ::uint64_t limit_;
    ::uint64_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class GetMessagesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.GetMessagesRequest) */ {
 public:
  inline GetMessagesRequest() : GetMessagesRequest(nullptr) {}
  ~GetMessagesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMessagesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMessagesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMessagesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMessagesRequest(const GetMessagesRequest& from) : GetMessagesRequest(nullptr, from) {}
  inline GetMessagesRequest(GetMessagesRequest&& from) noexcept
      : GetMessagesRequest(nullptr, std::move(from)) {}
  inline GetMessagesRequest& operator=(const GetMessagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMessagesRequest& operator=(GetMessagesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMessagesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMessagesRequest* internal_default_instance() {
    return reinterpret_cast<const GetMessagesRequest*>(
        &_GetMessagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(GetMessagesRequest& a, GetMessagesRequest& b) { a.Swap(&b); }
  inline void Swap(GetMessagesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMessagesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMessagesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMessagesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMessagesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMessagesRequest& from) { GetMessagesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMessagesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.GetMessagesRequest"; }

 protected:
  explicit GetMessagesRequest(::google::protobuf::Arena* arena);
  GetMessagesRequest(::google::protobuf::Arena* arena, const GetMessagesRequest& from);
  GetMessagesRequest(::google::protobuf::Arena* arena, GetMessagesRequest&& from) noexcept
      : GetMessagesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConversationIdFieldNumber = 1,
    kLastMessageIdFieldNumber = 2,
  };
  // uint64 conversation_id = 1 [json_name = "conversationId"];
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // uint64 last_message_id = 2 [json_name = "lastMessageId"];
  void clear_last_message_id() ;
  ::uint64_t last_message_id() const;
  void set_last_message_id(::uint64_t value);

  private:
  ::uint64_t _internal_last_message_id() const;
  void _internal_set_last_message_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.GetMessagesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMessagesRequest& from_msg);
    ::uint64_t conversation_id_;
    ::uint64_t last_message_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class GetConversationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.GetConversationsRequest) */ {
 public:
  inline GetConversationsRequest() : GetConversationsRequest(nullptr) {}
  ~GetConversationsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConversationsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConversationsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConversationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetConversationsRequest(const GetConversationsRequest& from) : GetConversationsRequest(nullptr, from) {}
  inline GetConversationsRequest(GetConversationsRequest&& from) noexcept
      : GetConversationsRequest(nullptr, std::move(from)) {}
  inline GetConversationsRequest& operator=(const GetConversationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConversationsRequest& operator=(GetConversationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConversationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConversationsRequest* internal_default_instance() {
    return reinterpret_cast<const GetConversationsRequest*>(
        &_GetConversationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetConversationsRequest& a, GetConversationsRequest& b) { a.Swap(&b); }
  inline void Swap(GetConversationsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConversationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConversationsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConversationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConversationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConversationsRequest& from) { GetConversationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConversationsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.GetConversationsRequest"; }

 protected:
  explicit GetConversationsRequest(::google::protobuf::Arena* arena);
  GetConversationsRequest(::google::protobuf::Arena* arena, const GetConversationsRequest& from);
  GetConversationsRequest(::google::protobuf::Arena* arena, GetConversationsRequest&& from) noexcept
      : GetConversationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
  };
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.GetConversationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetConversationsRequest& from_msg);
    ::uint64_t user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class GetConversationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.GetConversationRequest) */ {
 public:
  inline GetConversationRequest() : GetConversationRequest(nullptr) {}
  ~GetConversationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConversationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConversationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConversationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetConversationRequest(const GetConversationRequest& from) : GetConversationRequest(nullptr, from) {}
  inline GetConversationRequest(GetConversationRequest&& from) noexcept
      : GetConversationRequest(nullptr, std::move(from)) {}
  inline GetConversationRequest& operator=(const GetConversationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConversationRequest& operator=(GetConversationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConversationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConversationRequest* internal_default_instance() {
    return reinterpret_cast<const GetConversationRequest*>(
        &_GetConversationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetConversationRequest& a, GetConversationRequest& b) { a.Swap(&b); }
  inline void Swap(GetConversationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConversationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConversationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConversationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConversationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConversationRequest& from) { GetConversationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConversationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.GetConversationRequest"; }

 protected:
  explicit GetConversationRequest(::google::protobuf::Arena* arena);
  GetConversationRequest(::google::protobuf::Arena* arena, const GetConversationRequest& from);
  GetConversationRequest(::google::protobuf::Arena* arena, GetConversationRequest&& from) noexcept
      : GetConversationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
    kConversationIdFieldNumber = 2,
  };
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // uint64 conversation_id = 2 [json_name = "conversationId"];
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.GetConversationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetConversationRequest& from_msg);
    ::uint64_t user_id_;
    ::uint64_t conversation_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class DeleteUserResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:converse.service.main.DeleteUserResponse) */ {
 public:
  inline DeleteUserResponse() : DeleteUserResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteUserResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteUserResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteUserResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteUserResponse(const DeleteUserResponse& from) : DeleteUserResponse(nullptr, from) {}
  inline DeleteUserResponse(DeleteUserResponse&& from) noexcept
      : DeleteUserResponse(nullptr, std::move(from)) {}
  inline DeleteUserResponse& operator=(const DeleteUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteUserResponse& operator=(DeleteUserResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteUserResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteUserResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteUserResponse*>(
        &_DeleteUserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(DeleteUserResponse& a, DeleteUserResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteUserResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteUserResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteUserResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteUserResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteUserResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteUserResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.DeleteUserResponse"; }

 protected:
  explicit DeleteUserResponse(::google::protobuf::Arena* arena);
  DeleteUserResponse(::google::protobuf::Arena* arena, const DeleteUserResponse& from);
  DeleteUserResponse(::google::protobuf::Arena* arena, DeleteUserResponse&& from) noexcept
      : DeleteUserResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:converse.service.main.DeleteUserResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteUserResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class DeleteUserRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.DeleteUserRequest) */ {
 public:
  inline DeleteUserRequest() : DeleteUserRequest(nullptr) {}
  ~DeleteUserRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteUserRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteUserRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteUserRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteUserRequest(const DeleteUserRequest& from) : DeleteUserRequest(nullptr, from) {}
  inline DeleteUserRequest(DeleteUserRequest&& from) noexcept
      : DeleteUserRequest(nullptr, std::move(from)) {}
  inline DeleteUserRequest& operator=(const DeleteUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteUserRequest& operator=(DeleteUserRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteUserRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteUserRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteUserRequest*>(
        &_DeleteUserRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(DeleteUserRequest& a, DeleteUserRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteUserRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteUserRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteUserRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteUserRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteUserRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteUserRequest& from) { DeleteUserRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteUserRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.DeleteUserRequest"; }

 protected:
  explicit DeleteUserRequest(::google::protobuf::Arena* arena);
  DeleteUserRequest(::google::protobuf::Arena* arena, const DeleteUserRequest& from);
  DeleteUserRequest(::google::protobuf::Arena* arena, DeleteUserRequest&& from) noexcept
      : DeleteUserRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserPasswordFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string user_password = 2 [json_name = "userPassword"];
  void clear_user_password() ;
  const std::string& user_password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_password(Arg_&& arg, Args_... args);
  std::string* mutable_user_password();
  PROTOBUF_NODISCARD std::string* release_user_password();
  void set_allocated_user_password(std::string* value);

  private:
  const std::string& _internal_user_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_password(
      const std::string& value);
  std::string* _internal_mutable_user_password();

  public:
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.DeleteUserRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteUserRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr user_password_;
    ::uint64_t user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class DeleteMessageResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:converse.service.main.DeleteMessageResponse) */ {
 public:
  inline DeleteMessageResponse() : DeleteMessageResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteMessageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteMessageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteMessageResponse(const DeleteMessageResponse& from) : DeleteMessageResponse(nullptr, from) {}
  inline DeleteMessageResponse(DeleteMessageResponse&& from) noexcept
      : DeleteMessageResponse(nullptr, std::move(from)) {}
  inline DeleteMessageResponse& operator=(const DeleteMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteMessageResponse& operator=(DeleteMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteMessageResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteMessageResponse*>(
        &_DeleteMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(DeleteMessageResponse& a, DeleteMessageResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteMessageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteMessageResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteMessageResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteMessageResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.DeleteMessageResponse"; }

 protected:
  explicit DeleteMessageResponse(::google::protobuf::Arena* arena);
  DeleteMessageResponse(::google::protobuf::Arena* arena, const DeleteMessageResponse& from);
  DeleteMessageResponse(::google::protobuf::Arena* arena, DeleteMessageResponse&& from) noexcept
      : DeleteMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:converse.service.main.DeleteMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteMessageResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class DeleteMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.DeleteMessageRequest) */ {
 public:
  inline DeleteMessageRequest() : DeleteMessageRequest(nullptr) {}
  ~DeleteMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteMessageRequest(const DeleteMessageRequest& from) : DeleteMessageRequest(nullptr, from) {}
  inline DeleteMessageRequest(DeleteMessageRequest&& from) noexcept
      : DeleteMessageRequest(nullptr, std::move(from)) {}
  inline DeleteMessageRequest& operator=(const DeleteMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteMessageRequest& operator=(DeleteMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteMessageRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteMessageRequest*>(
        &_DeleteMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(DeleteMessageRequest& a, DeleteMessageRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteMessageRequest& from) { DeleteMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.DeleteMessageRequest"; }

 protected:
  explicit DeleteMessageRequest(::google::protobuf::Arena* arena);
  DeleteMessageRequest(::google::protobuf::Arena* arena, const DeleteMessageRequest& from);
  DeleteMessageRequest(::google::protobuf::Arena* arena, DeleteMessageRequest&& from) noexcept
      : DeleteMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConversationIdFieldNumber = 1,
    kMessageIdFieldNumber = 2,
  };
  // uint64 conversation_id = 1 [json_name = "conversationId"];
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // uint64 message_id = 2 [json_name = "messageId"];
  void clear_message_id() ;
  ::uint64_t message_id() const;
  void set_message_id(::uint64_t value);

  private:
  ::uint64_t _internal_message_id() const;
  void _internal_set_message_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.DeleteMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteMessageRequest& from_msg);
    ::uint64_t conversation_id_;
    ::uint64_t message_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class DeleteConversationResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:converse.service.main.DeleteConversationResponse) */ {
 public:
  inline DeleteConversationResponse() : DeleteConversationResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteConversationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteConversationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteConversationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteConversationResponse(const DeleteConversationResponse& from) : DeleteConversationResponse(nullptr, from) {}
  inline DeleteConversationResponse(DeleteConversationResponse&& from) noexcept
      : DeleteConversationResponse(nullptr, std::move(from)) {}
  inline DeleteConversationResponse& operator=(const DeleteConversationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteConversationResponse& operator=(DeleteConversationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteConversationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteConversationResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteConversationResponse*>(
        &_DeleteConversationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(DeleteConversationResponse& a, DeleteConversationResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteConversationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteConversationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteConversationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteConversationResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteConversationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteConversationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.DeleteConversationResponse"; }

 protected:
  explicit DeleteConversationResponse(::google::protobuf::Arena* arena);
  DeleteConversationResponse(::google::protobuf::Arena* arena, const DeleteConversationResponse& from);
  DeleteConversationResponse(::google::protobuf::Arena* arena, DeleteConversationResponse&& from) noexcept
      : DeleteConversationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:converse.service.main.DeleteConversationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteConversationResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class DeleteConversationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.DeleteConversationRequest) */ {
 public:
  inline DeleteConversationRequest() : DeleteConversationRequest(nullptr) {}
  ~DeleteConversationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteConversationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteConversationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteConversationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteConversationRequest(const DeleteConversationRequest& from) : DeleteConversationRequest(nullptr, from) {}
  inline DeleteConversationRequest(DeleteConversationRequest&& from) noexcept
      : DeleteConversationRequest(nullptr, std::move(from)) {}
  inline DeleteConversationRequest& operator=(const DeleteConversationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteConversationRequest& operator=(DeleteConversationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteConversationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteConversationRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteConversationRequest*>(
        &_DeleteConversationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(DeleteConversationRequest& a, DeleteConversationRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteConversationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteConversationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteConversationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteConversationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteConversationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteConversationRequest& from) { DeleteConversationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteConversationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.DeleteConversationRequest"; }

 protected:
  explicit DeleteConversationRequest(::google::protobuf::Arena* arena);
  DeleteConversationRequest(::google::protobuf::Arena* arena, const DeleteConversationRequest& from);
  DeleteConversationRequest(::google::protobuf::Arena* arena, DeleteConversationRequest&& from) noexcept
      : DeleteConversationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConversationIdFieldNumber = 1,
  };
  // uint64 conversation_id = 1 [json_name = "conversationId"];
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.DeleteConversationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteConversationRequest& from_msg);
    ::uint64_t conversation_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class CreateConversationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.CreateConversationRequest) */ {
 public:
  inline CreateConversationRequest() : CreateConversationRequest(nullptr) {}
  ~CreateConversationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateConversationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateConversationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateConversationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateConversationRequest(const CreateConversationRequest& from) : CreateConversationRequest(nullptr, from) {}
  inline CreateConversationRequest(CreateConversationRequest&& from) noexcept
      : CreateConversationRequest(nullptr, std::move(from)) {}
  inline CreateConversationRequest& operator=(const CreateConversationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConversationRequest& operator=(CreateConversationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateConversationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateConversationRequest* internal_default_instance() {
    return reinterpret_cast<const CreateConversationRequest*>(
        &_CreateConversationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(CreateConversationRequest& a, CreateConversationRequest& b) { a.Swap(&b); }
  inline void Swap(CreateConversationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConversationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateConversationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateConversationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateConversationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateConversationRequest& from) { CreateConversationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateConversationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.CreateConversationRequest"; }

 protected:
  explicit CreateConversationRequest(::google::protobuf::Arena* arena);
  CreateConversationRequest(::google::protobuf::Arena* arena, const CreateConversationRequest& from);
  CreateConversationRequest(::google::protobuf::Arena* arena, CreateConversationRequest&& from) noexcept
      : CreateConversationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
    kOtherUserIdFieldNumber = 2,
  };
  // uint64 user_id = 1 [json_name = "userId"];
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // uint64 other_user_id = 2 [json_name = "otherUserId"];
  void clear_other_user_id() ;
  ::uint64_t other_user_id() const;
  void set_other_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_other_user_id() const;
  void _internal_set_other_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.CreateConversationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateConversationRequest& from_msg);
    ::uint64_t user_id_;
    ::uint64_t other_user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class Conversation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.Conversation) */ {
 public:
  inline Conversation() : Conversation(nullptr) {}
  ~Conversation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Conversation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Conversation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Conversation(
      ::google::protobuf::internal::ConstantInitialized);

  inline Conversation(const Conversation& from) : Conversation(nullptr, from) {}
  inline Conversation(Conversation&& from) noexcept
      : Conversation(nullptr, std::move(from)) {}
  inline Conversation& operator=(const Conversation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Conversation& operator=(Conversation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Conversation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Conversation* internal_default_instance() {
    return reinterpret_cast<const Conversation*>(
        &_Conversation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Conversation& a, Conversation& b) { a.Swap(&b); }
  inline void Swap(Conversation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Conversation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Conversation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Conversation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Conversation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Conversation& from) { Conversation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Conversation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.Conversation"; }

 protected:
  explicit Conversation(::google::protobuf::Arena* arena);
  Conversation(::google::protobuf::Arena* arena, const Conversation& from);
  Conversation(::google::protobuf::Arena* arena, Conversation&& from) noexcept
      : Conversation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUnreadMessageIdsFieldNumber = 4,
    kRecvUserUsernameFieldNumber = 3,
    kIdFieldNumber = 1,
    kRecvUserIdFieldNumber = 2,
  };
  // repeated uint64 unread_message_ids = 4 [json_name = "unreadMessageIds"];
  int unread_message_ids_size() const;
  private:
  int _internal_unread_message_ids_size() const;

  public:
  void clear_unread_message_ids() ;
  ::uint64_t unread_message_ids(int index) const;
  void set_unread_message_ids(int index, ::uint64_t value);
  void add_unread_message_ids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& unread_message_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_unread_message_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_unread_message_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_unread_message_ids();

  public:
  // string recv_user_username = 3 [json_name = "recvUserUsername"];
  void clear_recv_user_username() ;
  const std::string& recv_user_username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recv_user_username(Arg_&& arg, Args_... args);
  std::string* mutable_recv_user_username();
  PROTOBUF_NODISCARD std::string* release_recv_user_username();
  void set_allocated_recv_user_username(std::string* value);

  private:
  const std::string& _internal_recv_user_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recv_user_username(
      const std::string& value);
  std::string* _internal_mutable_recv_user_username();

  public:
  // uint64 id = 1 [json_name = "id"];
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // uint64 recv_user_id = 2 [json_name = "recvUserId"];
  void clear_recv_user_id() ;
  ::uint64_t recv_user_id() const;
  void set_recv_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_recv_user_id() const;
  void _internal_set_recv_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.Conversation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Conversation& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> unread_message_ids_;
    ::google::protobuf::internal::CachedSize _unread_message_ids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr recv_user_username_;
    ::uint64_t id_;
    ::uint64_t recv_user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class ReceiveMessageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.ReceiveMessageResponse) */ {
 public:
  inline ReceiveMessageResponse() : ReceiveMessageResponse(nullptr) {}
  ~ReceiveMessageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReceiveMessageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReceiveMessageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReceiveMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReceiveMessageResponse(const ReceiveMessageResponse& from) : ReceiveMessageResponse(nullptr, from) {}
  inline ReceiveMessageResponse(ReceiveMessageResponse&& from) noexcept
      : ReceiveMessageResponse(nullptr, std::move(from)) {}
  inline ReceiveMessageResponse& operator=(const ReceiveMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReceiveMessageResponse& operator=(ReceiveMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReceiveMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReceiveMessageResponse* internal_default_instance() {
    return reinterpret_cast<const ReceiveMessageResponse*>(
        &_ReceiveMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(ReceiveMessageResponse& a, ReceiveMessageResponse& b) { a.Swap(&b); }
  inline void Swap(ReceiveMessageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReceiveMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReceiveMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReceiveMessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReceiveMessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReceiveMessageResponse& from) { ReceiveMessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReceiveMessageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.ReceiveMessageResponse"; }

 protected:
  explicit ReceiveMessageResponse(::google::protobuf::Arena* arena);
  ReceiveMessageResponse(::google::protobuf::Arena* arena, const ReceiveMessageResponse& from);
  ReceiveMessageResponse(::google::protobuf::Arena* arena, ReceiveMessageResponse&& from) noexcept
      : ReceiveMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kConversationIdFieldNumber = 1,
  };
  // .converse.service.main.Message message = 2 [json_name = "message"];
  bool has_message() const;
  void clear_message() ;
  const ::converse::service::main::Message& message() const;
  PROTOBUF_NODISCARD ::converse::service::main::Message* release_message();
  ::converse::service::main::Message* mutable_message();
  void set_allocated_message(::converse::service::main::Message* value);
  void unsafe_arena_set_allocated_message(::converse::service::main::Message* value);
  ::converse::service::main::Message* unsafe_arena_release_message();

  private:
  const ::converse::service::main::Message& _internal_message() const;
  ::converse::service::main::Message* _internal_mutable_message();

  public:
  // uint64 conversation_id = 1 [json_name = "conversationId"];
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.ReceiveMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReceiveMessageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::converse::service::main::Message* message_;
    ::uint64_t conversation_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class GetOtherUsersResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.GetOtherUsersResponse) */ {
 public:
  inline GetOtherUsersResponse() : GetOtherUsersResponse(nullptr) {}
  ~GetOtherUsersResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOtherUsersResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOtherUsersResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOtherUsersResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOtherUsersResponse(const GetOtherUsersResponse& from) : GetOtherUsersResponse(nullptr, from) {}
  inline GetOtherUsersResponse(GetOtherUsersResponse&& from) noexcept
      : GetOtherUsersResponse(nullptr, std::move(from)) {}
  inline GetOtherUsersResponse& operator=(const GetOtherUsersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOtherUsersResponse& operator=(GetOtherUsersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOtherUsersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOtherUsersResponse* internal_default_instance() {
    return reinterpret_cast<const GetOtherUsersResponse*>(
        &_GetOtherUsersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(GetOtherUsersResponse& a, GetOtherUsersResponse& b) { a.Swap(&b); }
  inline void Swap(GetOtherUsersResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOtherUsersResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOtherUsersResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOtherUsersResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOtherUsersResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOtherUsersResponse& from) { GetOtherUsersResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOtherUsersResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.GetOtherUsersResponse"; }

 protected:
  explicit GetOtherUsersResponse(::google::protobuf::Arena* arena);
  GetOtherUsersResponse(::google::protobuf::Arena* arena, const GetOtherUsersResponse& from);
  GetOtherUsersResponse(::google::protobuf::Arena* arena, GetOtherUsersResponse&& from) noexcept
      : GetOtherUsersResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsersFieldNumber = 1,
  };
  // repeated .converse.service.main.User users = 1 [json_name = "users"];
  int users_size() const;
  private:
  int _internal_users_size() const;

  public:
  void clear_users() ;
  ::converse::service::main::User* mutable_users(int index);
  ::google::protobuf::RepeatedPtrField<::converse::service::main::User>* mutable_users();

  private:
  const ::google::protobuf::RepeatedPtrField<::converse::service::main::User>& _internal_users() const;
  ::google::protobuf::RepeatedPtrField<::converse::service::main::User>* _internal_mutable_users();
  public:
  const ::converse::service::main::User& users(int index) const;
  ::converse::service::main::User* add_users();
  const ::google::protobuf::RepeatedPtrField<::converse::service::main::User>& users() const;
  // @@protoc_insertion_point(class_scope:converse.service.main.GetOtherUsersResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOtherUsersResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::converse::service::main::User > users_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class GetMessagesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.GetMessagesResponse) */ {
 public:
  inline GetMessagesResponse() : GetMessagesResponse(nullptr) {}
  ~GetMessagesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMessagesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMessagesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMessagesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMessagesResponse(const GetMessagesResponse& from) : GetMessagesResponse(nullptr, from) {}
  inline GetMessagesResponse(GetMessagesResponse&& from) noexcept
      : GetMessagesResponse(nullptr, std::move(from)) {}
  inline GetMessagesResponse& operator=(const GetMessagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMessagesResponse& operator=(GetMessagesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMessagesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMessagesResponse* internal_default_instance() {
    return reinterpret_cast<const GetMessagesResponse*>(
        &_GetMessagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(GetMessagesResponse& a, GetMessagesResponse& b) { a.Swap(&b); }
  inline void Swap(GetMessagesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMessagesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMessagesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMessagesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMessagesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMessagesResponse& from) { GetMessagesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMessagesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.GetMessagesResponse"; }

 protected:
  explicit GetMessagesResponse(::google::protobuf::Arena* arena);
  GetMessagesResponse(::google::protobuf::Arena* arena, const GetMessagesResponse& from);
  GetMessagesResponse(::google::protobuf::Arena* arena, GetMessagesResponse&& from) noexcept
      : GetMessagesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated .converse.service.main.Message messages = 1 [json_name = "messages"];
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::converse::service::main::Message* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField<::converse::service::main::Message>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::converse::service::main::Message>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::converse::service::main::Message>* _internal_mutable_messages();
  public:
  const ::converse::service::main::Message& messages(int index) const;
  ::converse::service::main::Message* add_messages();
  const ::google::protobuf::RepeatedPtrField<::converse::service::main::Message>& messages() const;
  // @@protoc_insertion_point(class_scope:converse.service.main.GetMessagesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMessagesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::converse::service::main::Message > messages_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class GetConversationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.GetConversationsResponse) */ {
 public:
  inline GetConversationsResponse() : GetConversationsResponse(nullptr) {}
  ~GetConversationsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConversationsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConversationsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConversationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetConversationsResponse(const GetConversationsResponse& from) : GetConversationsResponse(nullptr, from) {}
  inline GetConversationsResponse(GetConversationsResponse&& from) noexcept
      : GetConversationsResponse(nullptr, std::move(from)) {}
  inline GetConversationsResponse& operator=(const GetConversationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConversationsResponse& operator=(GetConversationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConversationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConversationsResponse* internal_default_instance() {
    return reinterpret_cast<const GetConversationsResponse*>(
        &_GetConversationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(GetConversationsResponse& a, GetConversationsResponse& b) { a.Swap(&b); }
  inline void Swap(GetConversationsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConversationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConversationsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConversationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConversationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConversationsResponse& from) { GetConversationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConversationsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.GetConversationsResponse"; }

 protected:
  explicit GetConversationsResponse(::google::protobuf::Arena* arena);
  GetConversationsResponse(::google::protobuf::Arena* arena, const GetConversationsResponse& from);
  GetConversationsResponse(::google::protobuf::Arena* arena, GetConversationsResponse&& from) noexcept
      : GetConversationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConversationsFieldNumber = 1,
  };
  // repeated .converse.service.main.Conversation conversations = 1 [json_name = "conversations"];
  int conversations_size() const;
  private:
  int _internal_conversations_size() const;

  public:
  void clear_conversations() ;
  ::converse::service::main::Conversation* mutable_conversations(int index);
  ::google::protobuf::RepeatedPtrField<::converse::service::main::Conversation>* mutable_conversations();

  private:
  const ::google::protobuf::RepeatedPtrField<::converse::service::main::Conversation>& _internal_conversations() const;
  ::google::protobuf::RepeatedPtrField<::converse::service::main::Conversation>* _internal_mutable_conversations();
  public:
  const ::converse::service::main::Conversation& conversations(int index) const;
  ::converse::service::main::Conversation* add_conversations();
  const ::google::protobuf::RepeatedPtrField<::converse::service::main::Conversation>& conversations() const;
  // @@protoc_insertion_point(class_scope:converse.service.main.GetConversationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetConversationsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::converse::service::main::Conversation > conversations_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class GetConversationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.GetConversationResponse) */ {
 public:
  inline GetConversationResponse() : GetConversationResponse(nullptr) {}
  ~GetConversationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConversationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConversationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConversationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetConversationResponse(const GetConversationResponse& from) : GetConversationResponse(nullptr, from) {}
  inline GetConversationResponse(GetConversationResponse&& from) noexcept
      : GetConversationResponse(nullptr, std::move(from)) {}
  inline GetConversationResponse& operator=(const GetConversationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConversationResponse& operator=(GetConversationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConversationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConversationResponse* internal_default_instance() {
    return reinterpret_cast<const GetConversationResponse*>(
        &_GetConversationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetConversationResponse& a, GetConversationResponse& b) { a.Swap(&b); }
  inline void Swap(GetConversationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConversationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConversationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConversationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConversationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConversationResponse& from) { GetConversationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConversationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.GetConversationResponse"; }

 protected:
  explicit GetConversationResponse(::google::protobuf::Arena* arena);
  GetConversationResponse(::google::protobuf::Arena* arena, const GetConversationResponse& from);
  GetConversationResponse(::google::protobuf::Arena* arena, GetConversationResponse&& from) noexcept
      : GetConversationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConversationFieldNumber = 1,
  };
  // .converse.service.main.Conversation conversation = 1 [json_name = "conversation"];
  bool has_conversation() const;
  void clear_conversation() ;
  const ::converse::service::main::Conversation& conversation() const;
  PROTOBUF_NODISCARD ::converse::service::main::Conversation* release_conversation();
  ::converse::service::main::Conversation* mutable_conversation();
  void set_allocated_conversation(::converse::service::main::Conversation* value);
  void unsafe_arena_set_allocated_conversation(::converse::service::main::Conversation* value);
  ::converse::service::main::Conversation* unsafe_arena_release_conversation();

  private:
  const ::converse::service::main::Conversation& _internal_conversation() const;
  ::converse::service::main::Conversation* _internal_mutable_conversation();

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.GetConversationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetConversationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::converse::service::main::Conversation* conversation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};
// -------------------------------------------------------------------

class CreateConversationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:converse.service.main.CreateConversationResponse) */ {
 public:
  inline CreateConversationResponse() : CreateConversationResponse(nullptr) {}
  ~CreateConversationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateConversationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateConversationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateConversationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateConversationResponse(const CreateConversationResponse& from) : CreateConversationResponse(nullptr, from) {}
  inline CreateConversationResponse(CreateConversationResponse&& from) noexcept
      : CreateConversationResponse(nullptr, std::move(from)) {}
  inline CreateConversationResponse& operator=(const CreateConversationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConversationResponse& operator=(CreateConversationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateConversationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateConversationResponse* internal_default_instance() {
    return reinterpret_cast<const CreateConversationResponse*>(
        &_CreateConversationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CreateConversationResponse& a, CreateConversationResponse& b) { a.Swap(&b); }
  inline void Swap(CreateConversationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConversationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateConversationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateConversationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateConversationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateConversationResponse& from) { CreateConversationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateConversationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "converse.service.main.CreateConversationResponse"; }

 protected:
  explicit CreateConversationResponse(::google::protobuf::Arena* arena);
  CreateConversationResponse(::google::protobuf::Arena* arena, const CreateConversationResponse& from);
  CreateConversationResponse(::google::protobuf::Arena* arena, CreateConversationResponse&& from) noexcept
      : CreateConversationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConversationFieldNumber = 1,
  };
  // .converse.service.main.Conversation conversation = 1 [json_name = "conversation"];
  bool has_conversation() const;
  void clear_conversation() ;
  const ::converse::service::main::Conversation& conversation() const;
  PROTOBUF_NODISCARD ::converse::service::main::Conversation* release_conversation();
  ::converse::service::main::Conversation* mutable_conversation();
  void set_allocated_conversation(::converse::service::main::Conversation* value);
  void unsafe_arena_set_allocated_conversation(::converse::service::main::Conversation* value);
  ::converse::service::main::Conversation* unsafe_arena_release_conversation();

  private:
  const ::converse::service::main::Conversation& _internal_conversation() const;
  ::converse::service::main::Conversation* _internal_mutable_conversation();

  public:
  // @@protoc_insertion_point(class_scope:converse.service.main.CreateConversationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateConversationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::converse::service::main::Conversation* conversation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_converse_2fservice_2fmain_2fmain_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Message

// uint64 id = 1 [json_name = "id"];
inline void Message::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t Message::id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.Message.id)
  return _internal_id();
}
inline void Message::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.Message.id)
}
inline ::uint64_t Message::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Message::_internal_set_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// uint64 send_user_id = 2 [json_name = "sendUserId"];
inline void Message::clear_send_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_user_id_ = ::uint64_t{0u};
}
inline ::uint64_t Message::send_user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.Message.send_user_id)
  return _internal_send_user_id();
}
inline void Message::set_send_user_id(::uint64_t value) {
  _internal_set_send_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.Message.send_user_id)
}
inline ::uint64_t Message::_internal_send_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_user_id_;
}
inline void Message::_internal_set_send_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_user_id_ = value;
}

// string content = 3 [json_name = "content"];
inline void Message::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& Message::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.Message.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.Message.content)
}
inline std::string* Message::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:converse.service.main.Message.content)
  return _s;
}
inline const std::string& Message::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void Message::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* Message::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* Message::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.Message.content)
  return _impl_.content_.Release();
}
inline void Message::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.Message.content)
}

// -------------------------------------------------------------------

// Conversation

// uint64 id = 1 [json_name = "id"];
inline void Conversation::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t Conversation::id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.Conversation.id)
  return _internal_id();
}
inline void Conversation::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.Conversation.id)
}
inline ::uint64_t Conversation::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Conversation::_internal_set_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// uint64 recv_user_id = 2 [json_name = "recvUserId"];
inline void Conversation::clear_recv_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recv_user_id_ = ::uint64_t{0u};
}
inline ::uint64_t Conversation::recv_user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.Conversation.recv_user_id)
  return _internal_recv_user_id();
}
inline void Conversation::set_recv_user_id(::uint64_t value) {
  _internal_set_recv_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.Conversation.recv_user_id)
}
inline ::uint64_t Conversation::_internal_recv_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recv_user_id_;
}
inline void Conversation::_internal_set_recv_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recv_user_id_ = value;
}

// string recv_user_username = 3 [json_name = "recvUserUsername"];
inline void Conversation::clear_recv_user_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recv_user_username_.ClearToEmpty();
}
inline const std::string& Conversation::recv_user_username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.Conversation.recv_user_username)
  return _internal_recv_user_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Conversation::set_recv_user_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recv_user_username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.Conversation.recv_user_username)
}
inline std::string* Conversation::mutable_recv_user_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recv_user_username();
  // @@protoc_insertion_point(field_mutable:converse.service.main.Conversation.recv_user_username)
  return _s;
}
inline const std::string& Conversation::_internal_recv_user_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recv_user_username_.Get();
}
inline void Conversation::_internal_set_recv_user_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recv_user_username_.Set(value, GetArena());
}
inline std::string* Conversation::_internal_mutable_recv_user_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recv_user_username_.Mutable( GetArena());
}
inline std::string* Conversation::release_recv_user_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.Conversation.recv_user_username)
  return _impl_.recv_user_username_.Release();
}
inline void Conversation::set_allocated_recv_user_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recv_user_username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recv_user_username_.IsDefault()) {
    _impl_.recv_user_username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.Conversation.recv_user_username)
}

// repeated uint64 unread_message_ids = 4 [json_name = "unreadMessageIds"];
inline int Conversation::_internal_unread_message_ids_size() const {
  return _internal_unread_message_ids().size();
}
inline int Conversation::unread_message_ids_size() const {
  return _internal_unread_message_ids_size();
}
inline void Conversation::clear_unread_message_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unread_message_ids_.Clear();
}
inline ::uint64_t Conversation::unread_message_ids(int index) const {
  // @@protoc_insertion_point(field_get:converse.service.main.Conversation.unread_message_ids)
  return _internal_unread_message_ids().Get(index);
}
inline void Conversation::set_unread_message_ids(int index, ::uint64_t value) {
  _internal_mutable_unread_message_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:converse.service.main.Conversation.unread_message_ids)
}
inline void Conversation::add_unread_message_ids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unread_message_ids()->Add(value);
  // @@protoc_insertion_point(field_add:converse.service.main.Conversation.unread_message_ids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& Conversation::unread_message_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:converse.service.main.Conversation.unread_message_ids)
  return _internal_unread_message_ids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Conversation::mutable_unread_message_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:converse.service.main.Conversation.unread_message_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unread_message_ids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
Conversation::_internal_unread_message_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unread_message_ids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Conversation::_internal_mutable_unread_message_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unread_message_ids_;
}

// -------------------------------------------------------------------

// User

// uint64 id = 1 [json_name = "id"];
inline void User::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t User::id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.User.id)
  return _internal_id();
}
inline void User::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.User.id)
}
inline ::uint64_t User::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void User::_internal_set_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string username = 2 [json_name = "username"];
inline void User::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
}
inline const std::string& User::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.User.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void User::set_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.User.username)
}
inline std::string* User::mutable_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:converse.service.main.User.username)
  return _s;
}
inline const std::string& User::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void User::_internal_set_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(value, GetArena());
}
inline std::string* User::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.username_.Mutable( GetArena());
}
inline std::string* User::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.User.username)
  return _impl_.username_.Release();
}
inline void User::set_allocated_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.User.username)
}

// -------------------------------------------------------------------

// SignupUserRequest

// string user_username = 1 [json_name = "userUsername"];
inline void SignupUserRequest::clear_user_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_username_.ClearToEmpty();
}
inline const std::string& SignupUserRequest::user_username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.SignupUserRequest.user_username)
  return _internal_user_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignupUserRequest::set_user_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.SignupUserRequest.user_username)
}
inline std::string* SignupUserRequest::mutable_user_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_username();
  // @@protoc_insertion_point(field_mutable:converse.service.main.SignupUserRequest.user_username)
  return _s;
}
inline const std::string& SignupUserRequest::_internal_user_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_username_.Get();
}
inline void SignupUserRequest::_internal_set_user_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_username_.Set(value, GetArena());
}
inline std::string* SignupUserRequest::_internal_mutable_user_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_username_.Mutable( GetArena());
}
inline std::string* SignupUserRequest::release_user_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.SignupUserRequest.user_username)
  return _impl_.user_username_.Release();
}
inline void SignupUserRequest::set_allocated_user_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_username_.IsDefault()) {
    _impl_.user_username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.SignupUserRequest.user_username)
}

// string user_password = 2 [json_name = "userPassword"];
inline void SignupUserRequest::clear_user_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.ClearToEmpty();
}
inline const std::string& SignupUserRequest::user_password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.SignupUserRequest.user_password)
  return _internal_user_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignupUserRequest::set_user_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.SignupUserRequest.user_password)
}
inline std::string* SignupUserRequest::mutable_user_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_password();
  // @@protoc_insertion_point(field_mutable:converse.service.main.SignupUserRequest.user_password)
  return _s;
}
inline const std::string& SignupUserRequest::_internal_user_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_password_.Get();
}
inline void SignupUserRequest::_internal_set_user_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.Set(value, GetArena());
}
inline std::string* SignupUserRequest::_internal_mutable_user_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_password_.Mutable( GetArena());
}
inline std::string* SignupUserRequest::release_user_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.SignupUserRequest.user_password)
  return _impl_.user_password_.Release();
}
inline void SignupUserRequest::set_allocated_user_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_password_.IsDefault()) {
    _impl_.user_password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.SignupUserRequest.user_password)
}

// -------------------------------------------------------------------

// SignupUserResponse

// uint64 user_id = 1 [json_name = "userId"];
inline void SignupUserResponse::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t SignupUserResponse::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.SignupUserResponse.user_id)
  return _internal_user_id();
}
inline void SignupUserResponse::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.SignupUserResponse.user_id)
}
inline ::uint64_t SignupUserResponse::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void SignupUserResponse::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// -------------------------------------------------------------------

// SigninUserRequest

// string user_username = 1 [json_name = "userUsername"];
inline void SigninUserRequest::clear_user_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_username_.ClearToEmpty();
}
inline const std::string& SigninUserRequest::user_username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.SigninUserRequest.user_username)
  return _internal_user_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SigninUserRequest::set_user_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.SigninUserRequest.user_username)
}
inline std::string* SigninUserRequest::mutable_user_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_username();
  // @@protoc_insertion_point(field_mutable:converse.service.main.SigninUserRequest.user_username)
  return _s;
}
inline const std::string& SigninUserRequest::_internal_user_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_username_.Get();
}
inline void SigninUserRequest::_internal_set_user_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_username_.Set(value, GetArena());
}
inline std::string* SigninUserRequest::_internal_mutable_user_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_username_.Mutable( GetArena());
}
inline std::string* SigninUserRequest::release_user_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.SigninUserRequest.user_username)
  return _impl_.user_username_.Release();
}
inline void SigninUserRequest::set_allocated_user_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_username_.IsDefault()) {
    _impl_.user_username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.SigninUserRequest.user_username)
}

// string user_password = 2 [json_name = "userPassword"];
inline void SigninUserRequest::clear_user_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.ClearToEmpty();
}
inline const std::string& SigninUserRequest::user_password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.SigninUserRequest.user_password)
  return _internal_user_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SigninUserRequest::set_user_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.SigninUserRequest.user_password)
}
inline std::string* SigninUserRequest::mutable_user_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_password();
  // @@protoc_insertion_point(field_mutable:converse.service.main.SigninUserRequest.user_password)
  return _s;
}
inline const std::string& SigninUserRequest::_internal_user_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_password_.Get();
}
inline void SigninUserRequest::_internal_set_user_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.Set(value, GetArena());
}
inline std::string* SigninUserRequest::_internal_mutable_user_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_password_.Mutable( GetArena());
}
inline std::string* SigninUserRequest::release_user_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.SigninUserRequest.user_password)
  return _impl_.user_password_.Release();
}
inline void SigninUserRequest::set_allocated_user_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_password_.IsDefault()) {
    _impl_.user_password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.SigninUserRequest.user_password)
}

// -------------------------------------------------------------------

// SigninUserResponse

// uint64 user_id = 1 [json_name = "userId"];
inline void SigninUserResponse::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t SigninUserResponse::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.SigninUserResponse.user_id)
  return _internal_user_id();
}
inline void SigninUserResponse::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.SigninUserResponse.user_id)
}
inline ::uint64_t SigninUserResponse::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void SigninUserResponse::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// -------------------------------------------------------------------

// SendMessageRequest

// uint64 conversation_id = 1 [json_name = "conversationId"];
inline void SendMessageRequest::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t SendMessageRequest::conversation_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.SendMessageRequest.conversation_id)
  return _internal_conversation_id();
}
inline void SendMessageRequest::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.SendMessageRequest.conversation_id)
}
inline ::uint64_t SendMessageRequest::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void SendMessageRequest::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// uint64 message_send_user_id = 2 [json_name = "messageSendUserId"];
inline void SendMessageRequest::clear_message_send_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_send_user_id_ = ::uint64_t{0u};
}
inline ::uint64_t SendMessageRequest::message_send_user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.SendMessageRequest.message_send_user_id)
  return _internal_message_send_user_id();
}
inline void SendMessageRequest::set_message_send_user_id(::uint64_t value) {
  _internal_set_message_send_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.SendMessageRequest.message_send_user_id)
}
inline ::uint64_t SendMessageRequest::_internal_message_send_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_send_user_id_;
}
inline void SendMessageRequest::_internal_set_message_send_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_send_user_id_ = value;
}

// string message_content = 3 [json_name = "messageContent"];
inline void SendMessageRequest::clear_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_content_.ClearToEmpty();
}
inline const std::string& SendMessageRequest::message_content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.SendMessageRequest.message_content)
  return _internal_message_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendMessageRequest::set_message_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.SendMessageRequest.message_content)
}
inline std::string* SendMessageRequest::mutable_message_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message_content();
  // @@protoc_insertion_point(field_mutable:converse.service.main.SendMessageRequest.message_content)
  return _s;
}
inline const std::string& SendMessageRequest::_internal_message_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_content_.Get();
}
inline void SendMessageRequest::_internal_set_message_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_content_.Set(value, GetArena());
}
inline std::string* SendMessageRequest::_internal_mutable_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_content_.Mutable( GetArena());
}
inline std::string* SendMessageRequest::release_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.SendMessageRequest.message_content)
  return _impl_.message_content_.Release();
}
inline void SendMessageRequest::set_allocated_message_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_content_.IsDefault()) {
    _impl_.message_content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.SendMessageRequest.message_content)
}

// -------------------------------------------------------------------

// SendMessageResponse

// uint64 message_id = 1 [json_name = "messageId"];
inline void SendMessageResponse::clear_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = ::uint64_t{0u};
}
inline ::uint64_t SendMessageResponse::message_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.SendMessageResponse.message_id)
  return _internal_message_id();
}
inline void SendMessageResponse::set_message_id(::uint64_t value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.SendMessageResponse.message_id)
}
inline ::uint64_t SendMessageResponse::_internal_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_id_;
}
inline void SendMessageResponse::_internal_set_message_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = value;
}

// -------------------------------------------------------------------

// SignoutUserRequest

// uint64 user_id = 1 [json_name = "userId"];
inline void SignoutUserRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t SignoutUserRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.SignoutUserRequest.user_id)
  return _internal_user_id();
}
inline void SignoutUserRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.SignoutUserRequest.user_id)
}
inline ::uint64_t SignoutUserRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void SignoutUserRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// -------------------------------------------------------------------

// SignoutUserResponse

// -------------------------------------------------------------------

// DeleteUserRequest

// uint64 user_id = 1 [json_name = "userId"];
inline void DeleteUserRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t DeleteUserRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.DeleteUserRequest.user_id)
  return _internal_user_id();
}
inline void DeleteUserRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.DeleteUserRequest.user_id)
}
inline ::uint64_t DeleteUserRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void DeleteUserRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// string user_password = 2 [json_name = "userPassword"];
inline void DeleteUserRequest::clear_user_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.ClearToEmpty();
}
inline const std::string& DeleteUserRequest::user_password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.DeleteUserRequest.user_password)
  return _internal_user_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteUserRequest::set_user_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.DeleteUserRequest.user_password)
}
inline std::string* DeleteUserRequest::mutable_user_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_password();
  // @@protoc_insertion_point(field_mutable:converse.service.main.DeleteUserRequest.user_password)
  return _s;
}
inline const std::string& DeleteUserRequest::_internal_user_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_password_.Get();
}
inline void DeleteUserRequest::_internal_set_user_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.Set(value, GetArena());
}
inline std::string* DeleteUserRequest::_internal_mutable_user_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_password_.Mutable( GetArena());
}
inline std::string* DeleteUserRequest::release_user_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.DeleteUserRequest.user_password)
  return _impl_.user_password_.Release();
}
inline void DeleteUserRequest::set_allocated_user_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_password_.IsDefault()) {
    _impl_.user_password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.DeleteUserRequest.user_password)
}

// -------------------------------------------------------------------

// DeleteUserResponse

// -------------------------------------------------------------------

// GetOtherUsersRequest

// uint64 user_id = 1 [json_name = "userId"];
inline void GetOtherUsersRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t GetOtherUsersRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.GetOtherUsersRequest.user_id)
  return _internal_user_id();
}
inline void GetOtherUsersRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.GetOtherUsersRequest.user_id)
}
inline ::uint64_t GetOtherUsersRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void GetOtherUsersRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// string query = 2 [json_name = "query"];
inline void GetOtherUsersRequest::clear_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_.ClearToEmpty();
}
inline const std::string& GetOtherUsersRequest::query() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.GetOtherUsersRequest.query)
  return _internal_query();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOtherUsersRequest::set_query(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:converse.service.main.GetOtherUsersRequest.query)
}
inline std::string* GetOtherUsersRequest::mutable_query() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_query();
  // @@protoc_insertion_point(field_mutable:converse.service.main.GetOtherUsersRequest.query)
  return _s;
}
inline const std::string& GetOtherUsersRequest::_internal_query() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.query_.Get();
}
inline void GetOtherUsersRequest::_internal_set_query(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_.Set(value, GetArena());
}
inline std::string* GetOtherUsersRequest::_internal_mutable_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.query_.Mutable( GetArena());
}
inline std::string* GetOtherUsersRequest::release_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.GetOtherUsersRequest.query)
  return _impl_.query_.Release();
}
inline void GetOtherUsersRequest::set_allocated_query(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.query_.IsDefault()) {
    _impl_.query_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.GetOtherUsersRequest.query)
}

// uint64 limit = 3 [json_name = "limit"];
inline void GetOtherUsersRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::uint64_t{0u};
}
inline ::uint64_t GetOtherUsersRequest::limit() const {
  // @@protoc_insertion_point(field_get:converse.service.main.GetOtherUsersRequest.limit)
  return _internal_limit();
}
inline void GetOtherUsersRequest::set_limit(::uint64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:converse.service.main.GetOtherUsersRequest.limit)
}
inline ::uint64_t GetOtherUsersRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void GetOtherUsersRequest::_internal_set_limit(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// uint64 offset = 4 [json_name = "offset"];
inline void GetOtherUsersRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::uint64_t{0u};
}
inline ::uint64_t GetOtherUsersRequest::offset() const {
  // @@protoc_insertion_point(field_get:converse.service.main.GetOtherUsersRequest.offset)
  return _internal_offset();
}
inline void GetOtherUsersRequest::set_offset(::uint64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:converse.service.main.GetOtherUsersRequest.offset)
}
inline ::uint64_t GetOtherUsersRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void GetOtherUsersRequest::_internal_set_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// GetOtherUsersResponse

// repeated .converse.service.main.User users = 1 [json_name = "users"];
inline int GetOtherUsersResponse::_internal_users_size() const {
  return _internal_users().size();
}
inline int GetOtherUsersResponse::users_size() const {
  return _internal_users_size();
}
inline void GetOtherUsersResponse::clear_users() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.users_.Clear();
}
inline ::converse::service::main::User* GetOtherUsersResponse::mutable_users(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:converse.service.main.GetOtherUsersResponse.users)
  return _internal_mutable_users()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::converse::service::main::User>* GetOtherUsersResponse::mutable_users()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:converse.service.main.GetOtherUsersResponse.users)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_users();
}
inline const ::converse::service::main::User& GetOtherUsersResponse::users(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.GetOtherUsersResponse.users)
  return _internal_users().Get(index);
}
inline ::converse::service::main::User* GetOtherUsersResponse::add_users() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::converse::service::main::User* _add = _internal_mutable_users()->Add();
  // @@protoc_insertion_point(field_add:converse.service.main.GetOtherUsersResponse.users)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::converse::service::main::User>& GetOtherUsersResponse::users() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:converse.service.main.GetOtherUsersResponse.users)
  return _internal_users();
}
inline const ::google::protobuf::RepeatedPtrField<::converse::service::main::User>&
GetOtherUsersResponse::_internal_users() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.users_;
}
inline ::google::protobuf::RepeatedPtrField<::converse::service::main::User>*
GetOtherUsersResponse::_internal_mutable_users() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.users_;
}

// -------------------------------------------------------------------

// CreateConversationRequest

// uint64 user_id = 1 [json_name = "userId"];
inline void CreateConversationRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t CreateConversationRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.CreateConversationRequest.user_id)
  return _internal_user_id();
}
inline void CreateConversationRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.CreateConversationRequest.user_id)
}
inline ::uint64_t CreateConversationRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void CreateConversationRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// uint64 other_user_id = 2 [json_name = "otherUserId"];
inline void CreateConversationRequest::clear_other_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_user_id_ = ::uint64_t{0u};
}
inline ::uint64_t CreateConversationRequest::other_user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.CreateConversationRequest.other_user_id)
  return _internal_other_user_id();
}
inline void CreateConversationRequest::set_other_user_id(::uint64_t value) {
  _internal_set_other_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.CreateConversationRequest.other_user_id)
}
inline ::uint64_t CreateConversationRequest::_internal_other_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.other_user_id_;
}
inline void CreateConversationRequest::_internal_set_other_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_user_id_ = value;
}

// -------------------------------------------------------------------

// CreateConversationResponse

// .converse.service.main.Conversation conversation = 1 [json_name = "conversation"];
inline bool CreateConversationResponse::has_conversation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.conversation_ != nullptr);
  return value;
}
inline void CreateConversationResponse::clear_conversation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conversation_ != nullptr) _impl_.conversation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::converse::service::main::Conversation& CreateConversationResponse::_internal_conversation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::converse::service::main::Conversation* p = _impl_.conversation_;
  return p != nullptr ? *p : reinterpret_cast<const ::converse::service::main::Conversation&>(::converse::service::main::_Conversation_default_instance_);
}
inline const ::converse::service::main::Conversation& CreateConversationResponse::conversation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.CreateConversationResponse.conversation)
  return _internal_conversation();
}
inline void CreateConversationResponse::unsafe_arena_set_allocated_conversation(::converse::service::main::Conversation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conversation_);
  }
  _impl_.conversation_ = reinterpret_cast<::converse::service::main::Conversation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:converse.service.main.CreateConversationResponse.conversation)
}
inline ::converse::service::main::Conversation* CreateConversationResponse::release_conversation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::converse::service::main::Conversation* released = _impl_.conversation_;
  _impl_.conversation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::converse::service::main::Conversation* CreateConversationResponse::unsafe_arena_release_conversation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.CreateConversationResponse.conversation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::converse::service::main::Conversation* temp = _impl_.conversation_;
  _impl_.conversation_ = nullptr;
  return temp;
}
inline ::converse::service::main::Conversation* CreateConversationResponse::_internal_mutable_conversation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conversation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::converse::service::main::Conversation>(GetArena());
    _impl_.conversation_ = reinterpret_cast<::converse::service::main::Conversation*>(p);
  }
  return _impl_.conversation_;
}
inline ::converse::service::main::Conversation* CreateConversationResponse::mutable_conversation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::converse::service::main::Conversation* _msg = _internal_mutable_conversation();
  // @@protoc_insertion_point(field_mutable:converse.service.main.CreateConversationResponse.conversation)
  return _msg;
}
inline void CreateConversationResponse::set_allocated_conversation(::converse::service::main::Conversation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.conversation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.conversation_ = reinterpret_cast<::converse::service::main::Conversation*>(value);
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.CreateConversationResponse.conversation)
}

// -------------------------------------------------------------------

// GetConversationRequest

// uint64 user_id = 1 [json_name = "userId"];
inline void GetConversationRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t GetConversationRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.GetConversationRequest.user_id)
  return _internal_user_id();
}
inline void GetConversationRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.GetConversationRequest.user_id)
}
inline ::uint64_t GetConversationRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void GetConversationRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// uint64 conversation_id = 2 [json_name = "conversationId"];
inline void GetConversationRequest::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t GetConversationRequest::conversation_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.GetConversationRequest.conversation_id)
  return _internal_conversation_id();
}
inline void GetConversationRequest::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.GetConversationRequest.conversation_id)
}
inline ::uint64_t GetConversationRequest::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void GetConversationRequest::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// -------------------------------------------------------------------

// GetConversationResponse

// .converse.service.main.Conversation conversation = 1 [json_name = "conversation"];
inline bool GetConversationResponse::has_conversation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.conversation_ != nullptr);
  return value;
}
inline void GetConversationResponse::clear_conversation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conversation_ != nullptr) _impl_.conversation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::converse::service::main::Conversation& GetConversationResponse::_internal_conversation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::converse::service::main::Conversation* p = _impl_.conversation_;
  return p != nullptr ? *p : reinterpret_cast<const ::converse::service::main::Conversation&>(::converse::service::main::_Conversation_default_instance_);
}
inline const ::converse::service::main::Conversation& GetConversationResponse::conversation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.GetConversationResponse.conversation)
  return _internal_conversation();
}
inline void GetConversationResponse::unsafe_arena_set_allocated_conversation(::converse::service::main::Conversation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conversation_);
  }
  _impl_.conversation_ = reinterpret_cast<::converse::service::main::Conversation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:converse.service.main.GetConversationResponse.conversation)
}
inline ::converse::service::main::Conversation* GetConversationResponse::release_conversation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::converse::service::main::Conversation* released = _impl_.conversation_;
  _impl_.conversation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::converse::service::main::Conversation* GetConversationResponse::unsafe_arena_release_conversation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.GetConversationResponse.conversation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::converse::service::main::Conversation* temp = _impl_.conversation_;
  _impl_.conversation_ = nullptr;
  return temp;
}
inline ::converse::service::main::Conversation* GetConversationResponse::_internal_mutable_conversation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conversation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::converse::service::main::Conversation>(GetArena());
    _impl_.conversation_ = reinterpret_cast<::converse::service::main::Conversation*>(p);
  }
  return _impl_.conversation_;
}
inline ::converse::service::main::Conversation* GetConversationResponse::mutable_conversation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::converse::service::main::Conversation* _msg = _internal_mutable_conversation();
  // @@protoc_insertion_point(field_mutable:converse.service.main.GetConversationResponse.conversation)
  return _msg;
}
inline void GetConversationResponse::set_allocated_conversation(::converse::service::main::Conversation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.conversation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.conversation_ = reinterpret_cast<::converse::service::main::Conversation*>(value);
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.GetConversationResponse.conversation)
}

// -------------------------------------------------------------------

// GetConversationsRequest

// uint64 user_id = 1 [json_name = "userId"];
inline void GetConversationsRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t GetConversationsRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.GetConversationsRequest.user_id)
  return _internal_user_id();
}
inline void GetConversationsRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.GetConversationsRequest.user_id)
}
inline ::uint64_t GetConversationsRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void GetConversationsRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// -------------------------------------------------------------------

// GetConversationsResponse

// repeated .converse.service.main.Conversation conversations = 1 [json_name = "conversations"];
inline int GetConversationsResponse::_internal_conversations_size() const {
  return _internal_conversations().size();
}
inline int GetConversationsResponse::conversations_size() const {
  return _internal_conversations_size();
}
inline void GetConversationsResponse::clear_conversations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversations_.Clear();
}
inline ::converse::service::main::Conversation* GetConversationsResponse::mutable_conversations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:converse.service.main.GetConversationsResponse.conversations)
  return _internal_mutable_conversations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::converse::service::main::Conversation>* GetConversationsResponse::mutable_conversations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:converse.service.main.GetConversationsResponse.conversations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conversations();
}
inline const ::converse::service::main::Conversation& GetConversationsResponse::conversations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.GetConversationsResponse.conversations)
  return _internal_conversations().Get(index);
}
inline ::converse::service::main::Conversation* GetConversationsResponse::add_conversations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::converse::service::main::Conversation* _add = _internal_mutable_conversations()->Add();
  // @@protoc_insertion_point(field_add:converse.service.main.GetConversationsResponse.conversations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::converse::service::main::Conversation>& GetConversationsResponse::conversations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:converse.service.main.GetConversationsResponse.conversations)
  return _internal_conversations();
}
inline const ::google::protobuf::RepeatedPtrField<::converse::service::main::Conversation>&
GetConversationsResponse::_internal_conversations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversations_;
}
inline ::google::protobuf::RepeatedPtrField<::converse::service::main::Conversation>*
GetConversationsResponse::_internal_mutable_conversations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conversations_;
}

// -------------------------------------------------------------------

// ReadConversationRequest

// uint64 conversation_id = 1 [json_name = "conversationId"];
inline void ReadConversationRequest::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t ReadConversationRequest::conversation_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReadConversationRequest.conversation_id)
  return _internal_conversation_id();
}
inline void ReadConversationRequest::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReadConversationRequest.conversation_id)
}
inline ::uint64_t ReadConversationRequest::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void ReadConversationRequest::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// uint64 user_id = 2 [json_name = "userId"];
inline void ReadConversationRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t ReadConversationRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReadConversationRequest.user_id)
  return _internal_user_id();
}
inline void ReadConversationRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReadConversationRequest.user_id)
}
inline ::uint64_t ReadConversationRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void ReadConversationRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// -------------------------------------------------------------------

// ReadConversationResponse

// -------------------------------------------------------------------

// DeleteConversationRequest

// uint64 conversation_id = 1 [json_name = "conversationId"];
inline void DeleteConversationRequest::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t DeleteConversationRequest::conversation_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.DeleteConversationRequest.conversation_id)
  return _internal_conversation_id();
}
inline void DeleteConversationRequest::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.DeleteConversationRequest.conversation_id)
}
inline ::uint64_t DeleteConversationRequest::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void DeleteConversationRequest::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// -------------------------------------------------------------------

// DeleteConversationResponse

// -------------------------------------------------------------------

// GetMessagesRequest

// uint64 conversation_id = 1 [json_name = "conversationId"];
inline void GetMessagesRequest::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t GetMessagesRequest::conversation_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.GetMessagesRequest.conversation_id)
  return _internal_conversation_id();
}
inline void GetMessagesRequest::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.GetMessagesRequest.conversation_id)
}
inline ::uint64_t GetMessagesRequest::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void GetMessagesRequest::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// uint64 last_message_id = 2 [json_name = "lastMessageId"];
inline void GetMessagesRequest::clear_last_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_message_id_ = ::uint64_t{0u};
}
inline ::uint64_t GetMessagesRequest::last_message_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.GetMessagesRequest.last_message_id)
  return _internal_last_message_id();
}
inline void GetMessagesRequest::set_last_message_id(::uint64_t value) {
  _internal_set_last_message_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.GetMessagesRequest.last_message_id)
}
inline ::uint64_t GetMessagesRequest::_internal_last_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_message_id_;
}
inline void GetMessagesRequest::_internal_set_last_message_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_message_id_ = value;
}

// -------------------------------------------------------------------

// GetMessagesResponse

// repeated .converse.service.main.Message messages = 1 [json_name = "messages"];
inline int GetMessagesResponse::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int GetMessagesResponse::messages_size() const {
  return _internal_messages_size();
}
inline void GetMessagesResponse::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
inline ::converse::service::main::Message* GetMessagesResponse::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:converse.service.main.GetMessagesResponse.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::converse::service::main::Message>* GetMessagesResponse::mutable_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:converse.service.main.GetMessagesResponse.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::converse::service::main::Message& GetMessagesResponse::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.GetMessagesResponse.messages)
  return _internal_messages().Get(index);
}
inline ::converse::service::main::Message* GetMessagesResponse::add_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::converse::service::main::Message* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:converse.service.main.GetMessagesResponse.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::converse::service::main::Message>& GetMessagesResponse::messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:converse.service.main.GetMessagesResponse.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::converse::service::main::Message>&
GetMessagesResponse::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::converse::service::main::Message>*
GetMessagesResponse::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

// -------------------------------------------------------------------

// ReadMessagesRequest

// uint64 user_id = 1 [json_name = "userId"];
inline void ReadMessagesRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t ReadMessagesRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReadMessagesRequest.user_id)
  return _internal_user_id();
}
inline void ReadMessagesRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReadMessagesRequest.user_id)
}
inline ::uint64_t ReadMessagesRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void ReadMessagesRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// uint64 conversation_id = 2 [json_name = "conversationId"];
inline void ReadMessagesRequest::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t ReadMessagesRequest::conversation_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReadMessagesRequest.conversation_id)
  return _internal_conversation_id();
}
inline void ReadMessagesRequest::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReadMessagesRequest.conversation_id)
}
inline ::uint64_t ReadMessagesRequest::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void ReadMessagesRequest::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// repeated uint64 message_ids = 3 [json_name = "messageIds"];
inline int ReadMessagesRequest::_internal_message_ids_size() const {
  return _internal_message_ids().size();
}
inline int ReadMessagesRequest::message_ids_size() const {
  return _internal_message_ids_size();
}
inline void ReadMessagesRequest::clear_message_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_ids_.Clear();
}
inline ::uint64_t ReadMessagesRequest::message_ids(int index) const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReadMessagesRequest.message_ids)
  return _internal_message_ids().Get(index);
}
inline void ReadMessagesRequest::set_message_ids(int index, ::uint64_t value) {
  _internal_mutable_message_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReadMessagesRequest.message_ids)
}
inline void ReadMessagesRequest::add_message_ids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_message_ids()->Add(value);
  // @@protoc_insertion_point(field_add:converse.service.main.ReadMessagesRequest.message_ids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& ReadMessagesRequest::message_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:converse.service.main.ReadMessagesRequest.message_ids)
  return _internal_message_ids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ReadMessagesRequest::mutable_message_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:converse.service.main.ReadMessagesRequest.message_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_message_ids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
ReadMessagesRequest::_internal_message_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_ids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ReadMessagesRequest::_internal_mutable_message_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.message_ids_;
}

// -------------------------------------------------------------------

// ReadMessagesResponse

// -------------------------------------------------------------------

// DeleteMessageRequest

// uint64 conversation_id = 1 [json_name = "conversationId"];
inline void DeleteMessageRequest::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t DeleteMessageRequest::conversation_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.DeleteMessageRequest.conversation_id)
  return _internal_conversation_id();
}
inline void DeleteMessageRequest::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.DeleteMessageRequest.conversation_id)
}
inline ::uint64_t DeleteMessageRequest::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void DeleteMessageRequest::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// uint64 message_id = 2 [json_name = "messageId"];
inline void DeleteMessageRequest::clear_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = ::uint64_t{0u};
}
inline ::uint64_t DeleteMessageRequest::message_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.DeleteMessageRequest.message_id)
  return _internal_message_id();
}
inline void DeleteMessageRequest::set_message_id(::uint64_t value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.DeleteMessageRequest.message_id)
}
inline ::uint64_t DeleteMessageRequest::_internal_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_id_;
}
inline void DeleteMessageRequest::_internal_set_message_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = value;
}

// -------------------------------------------------------------------

// DeleteMessageResponse

// -------------------------------------------------------------------

// ReceiveMessageRequest

// uint64 user_id = 1 [json_name = "userId"];
inline void ReceiveMessageRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t ReceiveMessageRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReceiveMessageRequest.user_id)
  return _internal_user_id();
}
inline void ReceiveMessageRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReceiveMessageRequest.user_id)
}
inline ::uint64_t ReceiveMessageRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void ReceiveMessageRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// -------------------------------------------------------------------

// ReceiveMessageResponse

// uint64 conversation_id = 1 [json_name = "conversationId"];
inline void ReceiveMessageResponse::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t ReceiveMessageResponse::conversation_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReceiveMessageResponse.conversation_id)
  return _internal_conversation_id();
}
inline void ReceiveMessageResponse::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReceiveMessageResponse.conversation_id)
}
inline ::uint64_t ReceiveMessageResponse::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void ReceiveMessageResponse::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// .converse.service.main.Message message = 2 [json_name = "message"];
inline bool ReceiveMessageResponse::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_ != nullptr);
  return value;
}
inline void ReceiveMessageResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ != nullptr) _impl_.message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::converse::service::main::Message& ReceiveMessageResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::converse::service::main::Message* p = _impl_.message_;
  return p != nullptr ? *p : reinterpret_cast<const ::converse::service::main::Message&>(::converse::service::main::_Message_default_instance_);
}
inline const ::converse::service::main::Message& ReceiveMessageResponse::message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:converse.service.main.ReceiveMessageResponse.message)
  return _internal_message();
}
inline void ReceiveMessageResponse::unsafe_arena_set_allocated_message(::converse::service::main::Message* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_);
  }
  _impl_.message_ = reinterpret_cast<::converse::service::main::Message*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:converse.service.main.ReceiveMessageResponse.message)
}
inline ::converse::service::main::Message* ReceiveMessageResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::converse::service::main::Message* released = _impl_.message_;
  _impl_.message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::converse::service::main::Message* ReceiveMessageResponse::unsafe_arena_release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:converse.service.main.ReceiveMessageResponse.message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::converse::service::main::Message* temp = _impl_.message_;
  _impl_.message_ = nullptr;
  return temp;
}
inline ::converse::service::main::Message* ReceiveMessageResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::converse::service::main::Message>(GetArena());
    _impl_.message_ = reinterpret_cast<::converse::service::main::Message*>(p);
  }
  return _impl_.message_;
}
inline ::converse::service::main::Message* ReceiveMessageResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::converse::service::main::Message* _msg = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:converse.service.main.ReceiveMessageResponse.message)
  return _msg;
}
inline void ReceiveMessageResponse::set_allocated_message(::converse::service::main::Message* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.message_ = reinterpret_cast<::converse::service::main::Message*>(value);
  // @@protoc_insertion_point(field_set_allocated:converse.service.main.ReceiveMessageResponse.message)
}

// -------------------------------------------------------------------

// ReceiveReadMessagesRequest

// uint64 user_id = 1 [json_name = "userId"];
inline void ReceiveReadMessagesRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t ReceiveReadMessagesRequest::user_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReceiveReadMessagesRequest.user_id)
  return _internal_user_id();
}
inline void ReceiveReadMessagesRequest::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReceiveReadMessagesRequest.user_id)
}
inline ::uint64_t ReceiveReadMessagesRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void ReceiveReadMessagesRequest::_internal_set_user_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// -------------------------------------------------------------------

// ReceiveReadMessagesResponse

// uint64 conversation_id = 1 [json_name = "conversationId"];
inline void ReceiveReadMessagesResponse::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t ReceiveReadMessagesResponse::conversation_id() const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReceiveReadMessagesResponse.conversation_id)
  return _internal_conversation_id();
}
inline void ReceiveReadMessagesResponse::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReceiveReadMessagesResponse.conversation_id)
}
inline ::uint64_t ReceiveReadMessagesResponse::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void ReceiveReadMessagesResponse::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// repeated uint64 message_ids = 2 [json_name = "messageIds"];
inline int ReceiveReadMessagesResponse::_internal_message_ids_size() const {
  return _internal_message_ids().size();
}
inline int ReceiveReadMessagesResponse::message_ids_size() const {
  return _internal_message_ids_size();
}
inline void ReceiveReadMessagesResponse::clear_message_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_ids_.Clear();
}
inline ::uint64_t ReceiveReadMessagesResponse::message_ids(int index) const {
  // @@protoc_insertion_point(field_get:converse.service.main.ReceiveReadMessagesResponse.message_ids)
  return _internal_message_ids().Get(index);
}
inline void ReceiveReadMessagesResponse::set_message_ids(int index, ::uint64_t value) {
  _internal_mutable_message_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:converse.service.main.ReceiveReadMessagesResponse.message_ids)
}
inline void ReceiveReadMessagesResponse::add_message_ids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_message_ids()->Add(value);
  // @@protoc_insertion_point(field_add:converse.service.main.ReceiveReadMessagesResponse.message_ids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& ReceiveReadMessagesResponse::message_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:converse.service.main.ReceiveReadMessagesResponse.message_ids)
  return _internal_message_ids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ReceiveReadMessagesResponse::mutable_message_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:converse.service.main.ReceiveReadMessagesResponse.message_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_message_ids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
ReceiveReadMessagesResponse::_internal_message_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_ids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ReceiveReadMessagesResponse::_internal_mutable_message_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.message_ids_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace main
}  // namespace service
}  // namespace converse


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // converse_2fservice_2fmain_2fmain_2eproto_2epb_2eh
